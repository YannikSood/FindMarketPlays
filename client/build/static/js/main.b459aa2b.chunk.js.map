{"version":3,"sources":["firebase/firebase.js","reducers/authReducer.js","actions/notes.js","reducers/noteReducer.js","reducers/errorsReducer.js","reducers/index.js","store.js","routes/routes.js","components/Footer.js","components/Widgets/ScrollingWidget.js","components/Widgets/TAWidget.js","components/Widgets/SingleStockInfo.js","components/Widgets/SSFinancials.js","components/Widgets/StockProfile.js","helpers/SearchHelper.js","components/Stocks/OneStock.js","components/NavBar.js","components/About.js","components/Research/DDStuff.js","components/Research/DDItem.js","components/Research/DD.js","components/Options/UnusualOptionFlow.js","components/Options/UnusualOptions.js","components/News/NewsFlow.js","components/News/NewsFeed.js","helpers/DateHelper.js","components/Loader.js","components/Notes/Notes.js","components/Notes/NoteDetail.js","components/Errors/NoteErrors.js","components/Notes/EditNote.js","components/Widgets/MarketDataWidget.js","components/Widgets/EconDataWidget.js","components/Widgets/MarketOverviewWidget.js","components/Dashboard.js","components/Errors/LoginErrors.js","components/Auth/Login.js","components/Errors/RegisterError.js","components/Auth/Register.js","components/Auth/ForgotPassword.js","components/Errors/ResetErrors.js","components/Success/EmailSuccess.js","components/Success/PasswordSuccess.js","components/Account/Profile.js","util/profileAPI.js","components/Notes/NewNote.js","App.js","serviceWorker.js","index.js","validations/note.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","authSlice","createSlice","name","initialState","currentUser","isAuthed","reducers","clearUser","receiveUser","state","action","payload","uid","email","displayName","id","actions","receiveNote","note","type","receiveErrors","errors","noteReducer","Object","freeze","errorsReducer","rootReducer","combineReducers","auth","authReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistor","persistStore","LOGIN","Footer","Navbar","bg","variant","fixed","Nav","className","to","ScrollingWidget","script","document","createElement","src","async","innerHTML","JSON","stringify","symbols","proName","title","colorTheme","isTransparent","displayMode","locale","getElementById","appendChild","React","Component","TAWidget","addWidget","interval","width","height","symbol","props","value","showIntervalTabs","this","prevProps","SSIWidget","SSFWidget","largeChartUrl","StockProfile","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","OneStock","useState","searchedValue","setSearchedValue","Container","Row","Col","md","Form","Group","Control","onChange","event","target","toUpperCase","placeholder","lg","theme","Themes","DARK","autosize","NavigationAuth","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Button","onClick","signOut","NavigationNonAuth","ROUTES","connect","About","fluid","href","WallpaperItem","file","data","preview","postLink","permalink","rel","enabled","url","Wallpapers","files","map","DD","subreddit","sort","after","before","page","nextPage","fetch","then","res","json","setState","children","window","scrollTo","catch","console","log","prevPage","currentSubreddit","newState","sorts","setSubreddit","sub","contentJSX","length","pagingJSX","buttonNext","buttonPrev","UnusualOptionsFlow","Table","striped","bordered","hover","item","description","sentiment","put_call","date_expiration","strike_price","options","setOptions","history","useHistory","useEffect","headers","Accept","message","option_activity","err","error","fetchData","push","NewsFlow","dateRangeLabels","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","Loader","isLoading","setIsLoading","notes","setNotes","database","ref","once","snapshot","values","val","style","fromDate","toDate","moment","utc","updateLocale","relativeTime","fromUTC","toUTC","difference","from","formattedDateDifference","createdAt","dispatch","addNote","useDispatch","setNote","slug","useParams","updates","remove","dangerouslySetInnerHTML","__html","body","NoteErrors","noteErrors","keys","Alert","bodyValue","setBodyValue","titleValue","setTitleValue","setErrors","useRef","undefined","update","e","bodyText","current","getEditor","getText","replace","validateNote","isValid","handleSubmit","MarketDataWidget","dateRange","exchange","showChart","plotLineColorGrowing","plotLineColorFalling","gridLineColor","scaleFontColor","belowLineFillColorGrowing","belowLineFillColorFalling","symbolActiveColor","EconDataWidget","importanceFilter","currencyFilter","MarketOverviewWidget","tabs","originalTitle","Dashboard","Badge","LoginErrors","loginErrors","password","credentials","setCredentials","handleChange","onSubmit","preventDefault","signInWithEmailAndPassword","user","controlId","Label","Text","RegisterErrors","registerErrors","createUserWithEmailAndPassword","sendPasswordResetEmail","alert","ResetErrors","EmailSuccess","emailSuccess","PasswordSuccess","passwordSuccess","emailFlag","emailSwitch","emailValue","setEmail","tempEmail","setTempEmail","resetErrors","setEmailSuccess","setPassSuccess","resetEmail","newEmail","updateEmail","resetPassword","ProfileAPI","align","currentTarget","newNoteKey","createdBy","Date","getTime","App","ReactGa","initialize","pageview","location","pathname","search","onAuthStateChanged","Axios","method","loading","exact","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","Validator","require","module","exports","isEmpty"],"mappings":"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","file":"static/js/main.b459aa2b.chunk.js","sourcesContent":["import firebase from 'firebase';\n// NOTE: Before this goes live, these should be set as secret keys in environment variables\nconst config = {\n  apiKey: 'AIzaSyCU32UjFCylBIswXOL2mSkj01xsr3T5eWE',\n  authDomain: 'findmarketplays-f8556.firebaseapp.com',\n  databaseURL: 'https://findmarketplays-f8556.firebaseio.com',\n  projectId: 'findmarketplays-f8556',\n  storageBucket: 'findmarketplays-f8556.appspot.com',\n  messagingSenderId: '230930291400',\n};\n\nfirebase.initializeApp(config);\nexport default firebase;\n","import { createSlice } from '@reduxjs/toolkit';\n\n// SLICE\nconst authSlice = createSlice({\n  name: 'AUTH',\n  initialState: {\n    currentUser: {},\n    isAuthed: false,\n  },\n  reducers: {\n    clearUser: () => ({\n      currentUser: {},\n      isAuthed: false,\n    }),\n    receiveUser: shapeUser,\n  },\n});\n\nexport default authSlice.reducer;\n\n// ACTIONS\nexport const {\n  clearUser,\n  receiveUser,\n} = authSlice.actions;\n\n// REDUCER HELPERS\nfunction shapeUser(state, action) {\n  const { uid, email, displayName } = action.payload;\n  return {\n    ...state,\n    currentUser: {\n      id: uid,\n      email,\n      displayName,\n    },\n    isAuthed: true,\n  };\n}\n// THUNKS -- ASYNC ACTION CREATORS\n","export const RECEIVE_NOTE = \"RECEIVE_NOTE\";\nexport const RECEIVE_ERRORS = \"RECEIVE_ERROR\";\n\nexport const receiveNote = (note) => ({\n  type: RECEIVE_NOTE,\n  note\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_ERRORS,\n  errors\n})","import { RECEIVE_NOTE } from \"../actions/notes\"\n \nconst noteReducer = (state={}, action) => {\n    Object.freeze(state);\n\n    switch(action.type) {\n        case RECEIVE_NOTE:\n            return action.note\n        default: return state\n    };\n}\n\nexport default noteReducer;","import { RECEIVE_ERRORS } from \"../actions/notes\";\n\nconst errorsReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch (action.type) {\n        case RECEIVE_ERRORS:\n            return action.errors\n        default: return state\n    };\n}\n\nexport default errorsReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport noteReducer from './noteReducer';\nimport errorsReducer from './errorsReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  note: noteReducer,\n  errors: errorsReducer\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n// import logger from 'redux-logger';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\"auth\"]\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({ serializableCheck: false, immutableCheck: false })\n    // .concat(logger)\n});\n\nexport const persistor = persistStore(store);\n","export const DASHBOARD = '/market';\nexport const LOGIN = '/login';\nexport const LOGOUT = '/logout';\nexport const REGISTER = '/register';\nexport const FORGOT_PASSWORD = '/forgotPassword';\nexport const SINGLE_STOCK_RESEARCH = '/stock';\nexport const DD = '/DD';\nexport const NOTES = '/notes';\nexport const NEW_NOTE = '/note/new';\nexport const NOTE_DETAIL = '/note/:id';\nexport const UNUSUAL_OPTIONS = '/optionFeed';\nexport const NEWS_FEED = '/newsFeed';\nexport const ABOUT = '/about';\nexport const PROFILE = '/profile';\nexport const EDIT_NOTE = '/note/edit/:id';\n\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../routes/routes';\n\nconst Footer = () => (\n  <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\">\n    <Nav>\n      <NavLink className=\"nav-link\" to={ROUTES.DASHBOARD}>Copyright 2020 | FindMarketPlays LLC</NavLink>\n    </Nav>\n  </Navbar>\n);\n\nexport default Footer;\n","import React from 'react';\n\nclass ScrollingWidget extends React.Component {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        symbols: [\n          {\n            proName: 'AMEX:SPY',\n            title: 'SPY',\n          },\n          {\n            proName: 'NASDAQ:NDAQ',\n            title: 'NDAQ',\n          },\n          {\n            proName: 'NASDAQ:QQQ',\n            title: 'QQQ',\n          },\n          {\n            proName: 'FX_IDC:EURUSD',\n            title: 'EUR/USD',\n          },\n          {\n            proName: 'BITSTAMP:BTCUSD',\n            title: 'BTC/USD',\n          },\n\n        ],\n        colorTheme: 'dark',\n        isTransparent: false,\n        displayMode: 'adaptive',\n        locale: 'en',\n      },\n    );\n    document.getElementById('ScrollingWidget').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"ScrollingWidget\" />\n    );\n  }\n}\n\nexport default ScrollingWidget;\n","import React from 'react';\n\nclass TAWidget extends React.Component {\n  componentDidMount() {\n    this.addWidget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.addWidget();\n    }\n  }\n\n  addWidget = () => {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        interval: '1m',\n        width: 380,\n        isTransparent: false,\n        height: 450,\n        symbol: this.props.value,\n        showIntervalTabs: true,\n        locale: 'en',\n        colorTheme: 'dark',\n      },\n    );\n    document.getElementById('TAWidget').innerHTML = '';\n    document.getElementById('TAWidget').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"TAWidget\" className=\"widget__wrapper\" />\n    );\n  }\n}\n\nexport default TAWidget;\n","import React from 'react';\n\nclass SSIWidget extends React.Component {\n  componentDidMount() {\n    this.addWidget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.addWidget();\n    }\n  }\n\n    addWidget = () => {\n      const script = document.createElement('script');\n      script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js';\n      script.async = true;\n      script.innerHTML = JSON.stringify(\n        {\n          symbol: this.props.value,\n          width: 380,\n          locale: 'en',\n          colorTheme: 'dark',\n          isTransparent: false,\n        },\n      );\n      document.getElementById('SSIWIdget').innerHTML = '';\n      document.getElementById('SSIWIdget').appendChild(script);\n    }\n\n    render() {\n      return (\n        <div id=\"SSIWIdget\" className=\"widget__wrapper\" />\n      );\n    }\n}\n\nexport default SSIWidget;\n","import React from 'react';\n\nclass SSFWidget extends React.Component {\n  componentDidMount() {\n    this.addWidget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.addWidget();\n    }\n  }\n\n   addWidget = () => {\n     const script = document.createElement('script');\n     script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-financials.js';\n     script.async = true;\n     script.innerHTML = JSON.stringify(\n       {\n         symbol: this.props.value,\n         colorTheme: 'dark',\n         isTransparent: false,\n         largeChartUrl: '',\n         displayMode: 'regular',\n         width: 380,\n         height: 450,\n         locale: 'en',\n       },\n     );\n     document.getElementById('SSFWidget').innerHTML = '';\n     document.getElementById('SSFWidget').appendChild(script);\n   }\n\n   render() {\n     return (\n       <div id=\"SSFWidget\" className=\"widget__wrapper\" />\n     );\n   }\n}\n\nexport default SSFWidget;\n","import React from 'react';\n\nclass StockProfile extends React.Component {\n  componentDidMount() {\n    this.addWidget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.addWidget();\n    }\n  }\n\n  addWidget = () => {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        symbol: this.props.value,\n        width: 380,\n        height: 240,\n        colorTheme: 'dark',\n        isTransparent: false,\n        locale: 'en',\n      },\n    );\n    document.getElementById('StockProfile').innerHTML = '';\n    document.getElementById('StockProfile').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"StockProfile\" className=\"widget__wrapper\" />\n    );\n  }\n}\n\nexport default StockProfile;\n","// https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086\n\nexport const debounce = (func, wait) => {\n  let timeout;\n\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n","import React, { useState, Fragment } from 'react';\nimport { Row, Col, Container, Form } from 'react-bootstrap';\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport TAWidget from '../Widgets/TAWidget';\nimport SSIWidget from '../Widgets/SingleStockInfo';\nimport SSFWidget from '../Widgets/SSFinancials';\nimport StockProfile from '../Widgets/StockProfile';\nimport { debounce } from '../../helpers/SearchHelper';\n\nconst OneStock = () => {\n  // Hooks\n  const [searchedValue, setSearchedValue] = useState('TSLA');\n\n  // Handlers\n  const handleInputChange = (event) => {\n    debounce(setSearchedValue(event.target.value.toUpperCase()), 300);\n  };\n\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"widget__wrapper\">\n          <Col md={7}>\n            <Form>\n              <h1>Research A Single Stock</h1>\n              <h5>ENTER STOCK TICKER</h5>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  value={searchedValue}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Stock Ticker\"\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12} lg={6}>\n            <SSIWidget value={searchedValue} />\n          </Col>\n          <Col md={12} lg={6}>\n            <StockProfile value={searchedValue} />\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12} lg={6}>\n            <TAWidget value={searchedValue} />\n          </Col>\n          <Col md={12} lg={6}>\n            <SSFWidget value={searchedValue} />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"widget__col\">\n            <TradingViewWidget\n              symbol={searchedValue}\n              theme={Themes.DARK}\n              locale=\"en\"\n              autosize\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default OneStock;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n//Local Imports\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as ROUTES from '../routes/routes';\nimport firebase from '../firebase/firebase';\n\n// Consider highlighting the active nav link here based on the route param\n\nconst Navigation = ({ isAuthed }) => (\n  <div>{isAuthed ? <NavigationAuth /> : <NavigationNonAuth />}</div>\n);\nconst NavigationAuth = () => (\n  <Navbar collapseOnSelect expand=\"sm\" className=\"justify-content-center\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n    <Navbar.Brand>Platform</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav>\n        <NavLink className=\"nav-link\" to={ROUTES.DASHBOARD}>Market Overview</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.SINGLE_STOCK_RESEARCH}>Stock Lookup</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.DD}>Research </NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.NOTES}>Notes </NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.UNUSUAL_OPTIONS}>Options Feed</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.NEWS_FEED}>News Feed</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.PROFILE}>Profile</NavLink>\n        {/* <NavLink className=\"nav-link\" to={ROUTES.ABOUT}>About </NavLink> */}\n      </Nav>\n    </Navbar.Collapse>\n    <Button className=\"ml-2\" variant=\"primary\" onClick={() => { firebase.auth().signOut(); }}>Sign Out</Button>\n  </Navbar>\n);\n\nconst NavigationNonAuth = () => (\n  <Navbar collapseOnSelect expand=\"sm\" className=\"justify-content-center\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n    <Navbar.Brand>Platform</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav>\n        <NavLink className=\"nav-link\" to={ROUTES.DASHBOARD}>Market Overview</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.SINGLE_STOCK_RESEARCH}>Stock Lookup</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.DD}>Research </NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.NOTES}>Notes </NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.UNUSUAL_OPTIONS}>Options Feed</NavLink>\n        <NavLink className=\"nav-link\" to={ROUTES.NEWS_FEED}>News Feed</NavLink>\n        {/* <NavLink className=\"nav-link\" to={ROUTES.ABOUT}>About </NavLink> */}\n        <NavLink to={ROUTES.LOGIN}><Button className=\"ml-2\" variant=\"primary\">Log In/Sign Up</Button></NavLink>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst About = () => (\n  <div className=\"About\">\n    <Container fluid>\n      <h1>About FindMarketPlays.com</h1>\n      <p>\n        If you enjoy the platform, enter to win a $25 amazon gift card by completing the 2 minute survey found\n        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7hm_zUyg7aq-5RpidY49DHNpefFwk6um3JxDPpbOwLwYSag/viewform?usp=pp_url\"> here. </a>\n        Happy Trading!\n      </p>\n    </Container>\n  </div>\n\n);\n\nexport default About;\n","import React from 'react';\n\nconst WallpaperItem = ({ file }) => {\n  if (file.data.preview) {\n    if (file.data.preview.enabled) {\n      // console.log(file.data);\n      // let previewImage = file.data.preview.images[0].resolutions[file.data.preview.images[0].resolutions.length - 1].url;\n      // previewImage = previewImage.replace(/&amp;/g, '&');\n      // let subreddit = \"https://reddit.com/r/\" + file.data.subreddit;\n      const postLink = `https://reddit.com${file.data.permalink}`;\n      return (\n        <div className=\"col-sm-12 col-md-6 col-lg-4\">\n          <div className=\"card-link\">\n            <div className=\"research-card\">\n              <div className=\"card-img-top\">\n                <a href={postLink} target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"btn btn-secondary btn-sm top-right-float\">View Post</button></a>\n                {/* <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {(file.data.over_18) ? <div className=\"p-4\">NSFW</div> : <img src={previewImage} className=\"card-img-top\" width=\"100%\" alt={file.data.title}/>}\n                            </a> */}\n              </div>\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.data.title}</a>\n                </div>\n                <p className=\"card-text\">\n                  {/* Resolution: {file.data.preview.images[0].source.width}x{file.data.preview.images[0].source.height} */}\n                  {/* <br/>Posted on: <a href={subreddit} target=\"_blank\" rel=\"noopener noreferrer\">r/{file.data.subreddit}</a> */}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  } else {\n    // const subreddit = `https://reddit.com/r/${file.data.subreddit}`;\n    const postLink = `https://reddit.com${file.data.permalink}`;\n    return (\n      <div className=\"col-sm-12 col-md-6 col-lg-4\">\n        <div className=\" card-link\">\n          <div className=\"research-card\">\n            <div className=\"card-img-top\">\n              <a href={postLink} target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"btn btn-secondary btn-sm top-right-float\">View Post</button></a>\n              {/* <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {(file.data.over_18) ? <div className=\"p-4\">NSFW</div> : <img src={previewImage} className=\"card-img-top\" width=\"100%\" alt={file.data.title}/>}\n                            </a> */}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"card-title\">\n                <a href={postLink} target=\"_blank\" rel=\"noopener noreferrer\">{file.data.title}</a>\n              </div>\n              <p className=\"card-text\">\n                {/* Resolution: {file.data.preview.images[0].source.width}x{file.data.preview.images[0].source.height} */}\n                {/* <br/>Posted on: <a href={subreddit} target=\"_blank\" rel=\"noopener noreferrer\">r/{file.data.subreddit}</a> */}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div />\n  );\n};\n\nexport default WallpaperItem;\n","import React from 'react';\nimport WallpaperItem from './DDStuff';\n\nconst Wallpapers = ({files}) => {\n    return (\n        <div className=\"row\">\n            {files.map((file) => (\n                    <WallpaperItem key={file.data.id} file={file} />  \n            ))}\n        </div>\n    );\n}\n\nexport default Wallpapers;","// TODO: This needs a full refactor\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport Wallpapers from './DDItem';\n\nclass DD extends React.Component {\n  constructor(props) {\n    super(props);\n    this.subreddit = 'WallStreetResearch';\n\n    this.url = 'https://www.reddit.com/r/';\n    this.sorts = ['hot', 'new', 'top', 'controversial', 'rising'];\n  }\n\n    state = {\n      subreddit: 'WallStreetResearch',\n      sort: 'new',\n      files: [],\n      after: null,\n      before: null,\n      page: 1,\n    };\n\n    componentDidMount() {\n      this.setSubreddit(this.state.subreddit);\n    }\n\n    setSubreddit(sub) {\n      this.setState({\n        files: [],\n        currentSubreddit: sub,\n        page: 1,\n      });\n\n      fetch(`${this.url + sub}/${this.state.sort}.json`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({\n            files: data.data.children,\n            after: data.data.after,\n            before: data.data.before,\n          });\n          window.scrollTo(0, 0);\n        })\n        .catch(console.log);\n    }\n\n\n    nextPage = () => {\n      fetch(`${this.url + this.state.subreddit}/${this.state.sort}.json?count=${this.state.page * 25}&after=${this.state.after}`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState(() => ({\n            files: data.data.children,\n            after: data.data.after,\n            before: data.data.before,\n            page: this.state.page + 1,\n          }));\n          window.scrollTo(0, 0);\n        })\n        .catch(console.log);\n    }\n\n    prevPage = () => {\n      fetch(`${this.url + this.state.currentSubreddit}/${this.state.sort}.json?count=${((this.state.page - 1) * 25) - 1}&before=${this.state.before}`)\n        .then(res => res.json())\n        .then((data) => {\n          window.scrollTo(0, 0);\n          const newState = {\n            files: data.data.children,\n            after: data.data.after,\n            before: data.data.before,\n          };\n          if (this.state.page > 1) {\n            newState.page = this.state.page - 1;\n          }\n          this.setState(newState);\n        })\n        .catch(console.log);\n    }\n\n    changeSort(sort) {\n      this.setState({\n        files: [],\n        sort,\n        page: 1,\n      });\n      fetch(`${this.url + this.state.subreddit}/${sort}.json`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({\n            files: data.data.children,\n            after: data.data.after,\n            before: data.data.before,\n          });\n          window.scrollTo(0, 0);\n        })\n        .catch(console.log);\n    }\n\n    render() {\n      let contentJSX;\n      if (this.state.files.length > 0) {\n        let pagingJSX;\n        const buttonNext = <button className=\"btn btn-primary\" type=\"submit\" onClick={this.nextPage}>Next</button>;\n        const buttonPrev = <button className=\"btn btn-secondary\" type=\"submit\" onClick={this.prevPage}>Previous</button>;\n        if (this.state.after === null && this.state.before !== null) {\n          // last page\n          pagingJSX = <div>{buttonPrev}</div>;\n        } else if (this.state.before === null && this.state.after !== null) {\n          // first page\n          pagingJSX = <div>{buttonNext}</div>;\n        } else if (this.state.before !== null && this.state.after !== null) {\n          // in between pages\n          pagingJSX = (\n            <div>\n              {buttonPrev}\n              {' '}\n              <span className=\"p-3 text-black-50\">\n                Page\n                {this.state.page}\n              </span>\n              {' '}\n              {buttonNext}\n            </div>\n          );\n        } else {\n          pagingJSX = <div>No Posts found.</div>;\n        }\n        contentJSX = (\n          <div className=\"m-2\">\n            <Wallpapers files={this.state.files} />\n            <br />\n            <div className=\"center-block m-2\">{pagingJSX}</div>\n          </div>\n        );\n      } else {\n        contentJSX = <div className=\"p-2\"><center>Loading...</center></div>;\n      }\n\n      return (\n        <div className=\"DD\">\n          <Container fluid>\n            <Row>\n              <Col><ScrollingWidget /></Col>\n            </Row>\n            <Row>\n              <Col>\n                <h1>Find Trade Opportunities</h1>\n              </Col>\n            </Row>\n            {contentJSX}\n          </Container>\n        </div>\n      );\n    }\n}\n\nexport default DD;\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\n\nconst UnusualOptionsFlow = props => (\n  <Table striped bordered hover variant=\"dark\">\n    <thead>\n      <tr>\n        {/* <th>Date Of Order</th> */}\n        {/* <th>Ticker</th> */}\n        <th>Description</th>\n        <th>Sentiment</th>\n        {/* <th># of Contracts</th> */}\n        <th>Put/Call</th>\n        <th>Expiration</th>\n        <th>Strike</th> \n      </tr>\n    </thead>\n    {props.value.map(item => (\n      <tbody key={item.id}>\n        <tr>\n          {/* <td>{item.date}</td> */}\n          {/* <td>{item.ticker}</td> */}\n          <td>{item.description}</td>\n          <td>{item.sentiment}</td>\n          {/* <td>{item.size}</td> */}\n          <td>{item.put_call}</td>\n          <td>{item.date_expiration}</td>\n          <td>{item.strike_price}</td>\n        </tr>\n      </tbody>\n    ))}\n  </Table>\n);\n\n\nexport default UnusualOptionsFlow;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport UnusualOptionsFlow from './UnusualOptionFlow';\nimport { debounce } from '../../helpers/SearchHelper';\n\nconst UnusualOptions = ({ isAuthed }) => {\n  // Hooks\n  const [searchedValue, setSearchedValue] = useState('TSLA');\n  const [options, setOptions] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n        const fetchData = () => {\n          const url = `/optionsAPI/${searchedValue}`;\n          fetch(url, { headers: { Accept: 'application/json' } })\n            .then(res => res.json()\n              .then((json) => {\n                // console.log(json);\n                setOptions(json.message.option_activity || []);\n              }))\n            .catch(err => console.error(err)); // eslint-disable-line\n        };\n        debounce(fetchData());  \n    }\n  }, [isAuthed, history, searchedValue]);\n\n  // Handlers\n  const handleInputChange = (event) => {\n    setSearchedValue(event.target.value.toUpperCase());\n  };\n\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"widget__wrapper\">\n          <Col md={7}>\n            <Form>\n              <h1>Find Unusual Options Trades</h1>\n              <h5>ENTER STOCK TICKER</h5>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  value={searchedValue}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Stock Ticker\"\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          {searchedValue && options.length > 0 && <UnusualOptionsFlow value={options} />}\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(UnusualOptions);\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\n\nconst NewsFlow = props => (\n  <Table striped bordered hover variant=\"dark\">\n    <thead>\n      <tr>\n        <th>Title</th>\n      </tr>\n    </thead>\n    {props.value.map(item => (\n      <tbody key={item.id}>\n        <tr>\n          <td><a href={item.url} target=\"popup\">{item.title}</a></td>\n        </tr>\n      </tbody>\n    ))}\n  </Table>\n);\n\n\nexport default NewsFlow;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport NewsFlow from './NewsFlow';\nimport * as ROUTES from '../../routes/routes';\nimport { debounce } from '../../helpers/SearchHelper';\n\nconst NewsFeed = ({ isAuthed }) => {\n  // Hooks\n  const [searchedValue, setSearchedValue] = useState('TSLA');\n  const [options, setOptions] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(ROUTES.LOGIN);\n    } else {\n        const fetchData = () => {\n          const url = `/newsAPI/${searchedValue}`;\n          fetch(url, { headers: { Accept: 'application/json' } })\n            .then(res => res.json()\n              .then((json) => {\n                setOptions(json.message || []);\n              }))\n            .catch(err => console.error(err)); // eslint-disable-line\n        };\n        debounce(fetchData());\n    }\n  }, [isAuthed, history, searchedValue]);\n\n  // Handlers\n  const handleInputChange = (event) => {\n    setSearchedValue(event.target.value.toUpperCase());\n  };\n\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"widget__wrapper\">\n          <Col md={7}>\n            <Form>\n              <h1>Find News Articles</h1>\n              <h5>ENTER STOCK TICKER</h5>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  value={searchedValue}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Stock Ticker\"\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          {searchedValue && options.length > 0 && <NewsFlow value={options} />}\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(NewsFeed);\n","import moment from 'moment-timezone';\n\nconst dateRangeLabels = {\n  s: 'few seconds',\n  ss: '%d seconds',\n  m: '1 minute',\n  mm: '%d minutes',\n  h: '1 hour',\n  hh: '%d hours',\n  d: '1 day',\n  dd: '%d days',\n  M: '1 month',\n  MM: '%d months',\n  y: '1 year',\n  yy: '%d years',\n};\n\nexport const formattedDateDifference = (fromDate, toDate = moment.utc()) => {\n  moment.updateLocale('en', { relativeTime: dateRangeLabels });\n  const fromUTC = moment.utc(fromDate);\n  const toUTC = moment.utc(toDate);\n  const difference = toUTC.from(fromUTC, true);\n  moment.updateLocale('en', null);\n  return `${difference} ago`;\n};\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loading-container\">\n    <div className=\"loading\">\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Row, Col, Container, Button, Table } from 'react-bootstrap';\nimport { formattedDateDifference } from '../../helpers/DateHelper';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport firebase from '../../firebase/firebase';\nimport Loader from '../Loader';\n\nconst Notes = ({ currentUser, isAuthed }) => {\n  // Hooks\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n      firebase\n        .database()\n        .ref(`/user-notes/${currentUser.id}`)\n        .once(\"value\")\n        .then((snapshot) => {\n          setNotes(Object.values(snapshot?.val()) || []);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(\"error fetching notes: \", err);\n          setIsLoading(false);\n        });\n    }\n  }, [isAuthed, history, currentUser.id]);\n\n  // useEffect(() => {\n  //   firebase.database().ref(`/user-notes/${currentUser.id}`).once('value')\n  //     .then((snapshot) => {\n  //       setNotes(Object.values(snapshot?.val()) || []);\n  //       setIsLoading(false);\n  //     })\n  //     .catch((err) => {\n  //       console.log('error fetching notes: ', err);\n  //       setIsLoading(false);\n  //     });\n  // }, [currentUser.id]);\n  // Handlers\n\n  const renderNotes = () => {\n    if (notes.length === 0) return <Row><Col><p>Nothing here yet...</p></Col></Row>;\n    return notes.map(note => (\n      <tr key={note.id}>\n          <td>\n            <Link className=\"note-title\" to={`/note/${note.id}`}>{note.title}</Link>\n          </td>\n        <td style={{ width: '25%' }}>{formattedDateDifference(note.createdAt)}</td>\n      </tr>\n    ));\n  };\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"mb-3\">\n          <Col className=\"d-flex justify-content-between\">\n            <h1 className=\"d-inline-block\">Notes</h1>\n            <div>\n              <Button variant=\"primary\" onClick={() => history.push('/note/new')}>Create</Button>\n            </div>\n          </Col>\n        </Row>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table striped bordered hover variant=\"dark\">\n            <tbody>\n              <tr>\n                <th>Title</th>\n                <th style={{ width: '25%' }}>Posted</th>\n              </tr>\n              {renderNotes()}\n            </tbody>\n          </Table>\n        )}\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(Notes);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport firebase from '../../firebase/firebase';\nimport Loader from '../Loader';\nimport { receiveNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\nimport { connect } from \"react-redux\";\n\nconst NoteDetail = ({currentUser, addNote }) => {\n  // Hooks\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [note, setNote] = useState([]);\n  const slug = useParams();\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(`/user-notes/${currentUser.id}/${slug.id}`)\n      .once(\"value\")\n      .then((snapshot) => {\n        setNote(snapshot?.val());\n        dispatch(receiveNote(snapshot?.val()));\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(\"error fetching note: \", err);\n        setIsLoading(false);\n      });\n  }, [slug.id]);\n  // Handlers\n\n  let updates = {};\n  updates[`/notes/${note.id}`] = note;\n  updates[`/user-notes/${currentUser.id}/${note.id}`] = note;\n\n  function component() {\n    return (\n      <Container>\n        <Row className=\"mb-3\">\n          <Col className=\"d-flex justify-content-between\">\n            <h1 className=\"d-inline-block\">{note.title}</h1>\n            <div>\n              <Button\n                className=\"mt-1 ml-3\"\n                variant=\"primary\"\n                onClick={() => {\n                  history.push(`/note/edit/${slug.id}`);\n                }}\n              >\n                Edit\n              </Button>\n              <Button\n                className=\"mt-1 ml-3\"\n                variant=\"danger\"\n                onClick={() => {\n                  firebase\n                    .database()\n                    .ref(`/user-notes/${currentUser.id}/${note.id}`)\n                    .remove()\n                    .then(() => history.push(`/notes`))\n                    .catch((err) => \"Cannot delete\");\n                }}\n              >\n                Delete\n              </Button>\n              <Button\n                className=\"mt-1 ml-3\"\n                variant=\"secondary\"\n                onClick={() => {\n                  history.push(`/notes`);\n                }}\n              >\n                Back\n              </Button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div dangerouslySetInnerHTML={{ __html: note.body }} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        component()\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addNote: (note) => dispatch(receiveNote(note))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction NoteErrors(noteErrors) {\n    if (Object.keys(noteErrors).length) {\n        return (\n            <Alert variant=\"danger\" >\n                <p>\n                    Darn it! It looks like you've left your title or body empty.\n              </p>\n            </Alert>\n        )\n\n    }\n}\n\nexport default NoteErrors","import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nimport ScrollingWidget from \"../Widgets/ScrollingWidget\";\nimport firebase from \"../../firebase/firebase\";\nimport { receiveErrors } from '../../actions/notes';\nimport validateNote from '../../validations/note';\nimport NoteErrors from '../Errors/NoteErrors';\n\nconst EditNote = ({ currentUser, note }) => {    \n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [bodyValue, setBodyValue] = useState(note.body);\n    const [titleValue, setTitleValue] = useState(note.title);\n    const [noteErrors, setErrors] = useState({});\n    const ref = useRef();\n\n    useEffect(() => {\n      if (titleValue === undefined || bodyValue === undefined) {\n        history.push(\"/notes\");\n      }\n    }, [])\n    \n    const update = {\n      title: titleValue,\n      body: bodyValue\n    }\n\n    \n    function handleSubmit() {\n      let bodyText = ref.current.getEditor().getText().replace(/\\n/ig, '');\n      const { errors, isValid } = validateNote(titleValue, bodyText);\n      if (!isValid) {\n        setErrors(errors);\n        dispatch(receiveErrors(errors));\n        return;\n      } else {\n        firebase.database().ref(`/user-notes/${currentUser.id}/${note.id}`).update(update);\n        history.push(\"/notes\");\n      }\n\n    }\n\n    return (\n      <Fragment>\n        <ScrollingWidget />\n          <Container>\n            {NoteErrors(noteErrors)}\n            <Row>\n              <Col>\n                <Form>\n                  <Form.Group>\n                    <Form.Control\n                      type=\"text\"\n                      value={titleValue}\n                      onChange={(e) => setTitleValue(e.target.value)}\n                      placeholder=\"Title\"\n                    />\n                  </Form.Group>\n                </Form>\n                <ReactQuill\n                  theme=\"snow\"\n                  value={bodyValue || \"\"}\n                  onChange={setBodyValue}\n                  id=\"notes-container\"\n                  placeholder=\"Compose a note...\"\n                  ref={ref}\n                />\n                <Button\n                  variant=\"primary\"\n                  className=\"mt-4\"\n                  onClick={() => {handleSubmit()}}\n                >\n                  Save\n                </Button>\n                <Button\n                  className=\"ml-2 mt-4\"\n                  variant=\"secondary\"\n                  onClick={() => history.push(\"/notes\")}\n                >\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n      </Fragment>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { auth, note } = state;\n\n    return {\n        currentUser: auth.currentUser,\n        note: note\n    };\n};\n\nexport default connect(mapStateToProps)(EditNote);","import React from 'react';\n\nclass MarketDataWidget extends React.Component {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-hotlists.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        colorTheme: 'dark',\n        dateRange: '1d',\n        exchange: 'US',\n        showChart: true,\n        locale: 'en',\n        largeChartUrl: '',\n        isTransparent: false,\n        width: '310',\n        height: '600',\n        plotLineColorGrowing: 'rgba(33, 150, 243, 1)',\n        plotLineColorFalling: 'rgba(33, 150, 243, 1)',\n        gridLineColor: 'rgba(240, 243, 250, 1)',\n        scaleFontColor: 'rgba(120, 123, 134, 1)',\n        belowLineFillColorGrowing: 'rgba(33, 150, 243, 0.12)',\n        belowLineFillColorFalling: 'rgba(33, 150, 243, 0.12)',\n        symbolActiveColor: 'rgba(33, 150, 243, 0.12)',\n      },\n    );\n    document.getElementById('MarketDataWidget').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"MarketDataWidget\" />\n    );\n  }\n}\n\nexport default MarketDataWidget;\n","import React from 'react';\n\nclass EconDataWidget extends React.Component {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-events.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        colorTheme: 'dark',\n        isTransparent: false,\n        width: '310',\n        height: '600',\n        locale: 'en',\n        importanceFilter: '0,1',\n        currencyFilter: 'CNY,USD,GBP,SAR',\n      },\n    );\n    document.getElementById('EconDataWidget').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"EconDataWidget\" />\n    );\n  }\n}\n\nexport default EconDataWidget;\n","import React from 'react';\n\nclass MarketOverviewWidget extends React.Component {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js';\n    script.async = true;\n    script.innerHTML = JSON.stringify(\n      {\n        colorTheme: 'dark',\n        dateRange: '12m',\n        showChart: true,\n        locale: 'en',\n        largeChartUrl: '',\n        isTransparent: false,\n        width: '310',\n        height: '600',\n        plotLineColorGrowing: 'rgba(33, 150, 243, 1)',\n        plotLineColorFalling: 'rgba(33, 150, 243, 1)',\n        gridLineColor: 'rgba(240, 243, 250, 1)',\n        scaleFontColor: 'rgba(120, 123, 134, 1)',\n        belowLineFillColorGrowing: 'rgba(33, 150, 243, 0.12)',\n        belowLineFillColorFalling: 'rgba(33, 150, 243, 0.12)',\n        symbolActiveColor: 'rgba(33, 150, 243, 0.12)',\n        tabs: [\n          {\n            title: 'Indices',\n            symbols: [\n              {\n                s: 'FOREXCOM:SPXUSD',\n                d: 'S&P 500',\n              },\n              {\n                s: 'FOREXCOM:NSXUSD',\n                d: 'Nasdaq 100',\n              },\n              {\n                s: 'FOREXCOM:DJI',\n                d: 'Dow 30',\n              },\n              {\n                s: 'INDEX:NKY',\n                d: 'Nikkei 225',\n              },\n              {\n                s: 'INDEX:DEU30',\n                d: 'DAX Index',\n              },\n              {\n                s: 'FOREXCOM:UKXGBP',\n                d: 'FTSE 100',\n              },\n            ],\n            originalTitle: 'Indices',\n          },\n          {\n            title: 'Commodities',\n            symbols: [\n              {\n                s: 'CME_MINI:ES1!',\n                d: 'E-Mini S&P',\n              },\n              {\n                s: 'CME:6E1!',\n                d: 'Euro',\n              },\n              {\n                s: 'COMEX:GC1!',\n                d: 'Gold',\n              },\n              {\n                s: 'NYMEX:CL1!',\n                d: 'Crude Oil',\n              },\n              {\n                s: 'NYMEX:NG1!',\n                d: 'Natural Gas',\n              },\n              {\n                s: 'CBOT:ZC1!',\n                d: 'Corn',\n              },\n            ],\n            originalTitle: 'Commodities',\n          },\n          {\n            title: 'Bonds',\n            symbols: [\n              {\n                s: 'CME:GE1!',\n                d: 'Eurodollar',\n              },\n              {\n                s: 'CBOT:ZB1!',\n                d: 'T-Bond',\n              },\n              {\n                s: 'CBOT:UB1!',\n                d: 'Ultra T-Bond',\n              },\n              {\n                s: 'EUREX:FGBL1!',\n                d: 'Euro Bund',\n              },\n              {\n                s: 'EUREX:FBTP1!',\n                d: 'Euro BTP',\n              },\n              {\n                s: 'EUREX:FGBM1!',\n                d: 'Euro BOBL',\n              },\n            ],\n            originalTitle: 'Bonds',\n          },\n          {\n            title: 'Forex',\n            symbols: [\n              {\n                s: 'FX:EURUSD',\n              },\n              {\n                s: 'FX:GBPUSD',\n              },\n              {\n                s: 'FX:USDJPY',\n              },\n              {\n                s: 'FX:USDCHF',\n              },\n              {\n                s: 'FX:AUDUSD',\n              },\n              {\n                s: 'FX:USDCAD',\n              },\n            ],\n            originalTitle: 'Forex',\n          },\n        ],\n      },\n    );\n    document.getElementById('MarketOverviewWidget').appendChild(script);\n  }\n\n  render() {\n    return (\n      <div id=\"MarketOverviewWidget\" />\n    );\n  }\n}\n\nexport default MarketOverviewWidget;\n","import React, { Fragment} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\nimport ScrollingWidget from './Widgets/ScrollingWidget';\nimport MarketDataWidget from './Widgets/MarketDataWidget';\nimport EconDataWidget from './Widgets/EconDataWidget';\nimport MarketOverviewWidget from './Widgets/MarketOverviewWidget';\n// import ReactGa from 'react-ga';\n\n\nconst Dashboard = () => {\n  \n  \n  return (\n     <Fragment>\n      <ScrollingWidget />\n      <Container >\n      <br />\n      <Row className=\"mb-3\">\n          <Col className=\"d-flex justify-content-center\">\n            <h1>Market Overview</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col  md={12} lg={4}>\n          <h3><Badge variant=\"light\">Biggest Movers Today</Badge></h3>\n          <MarketDataWidget />\n        </Col>\n       \n        <Col  md={12} lg={4}>\n          <h3><Badge variant=\"light\">Market Overview</Badge></h3>\n          <MarketOverviewWidget />\n        </Col>\n\n        <Col  md={12} lg={4}>\n          <h3><Badge variant=\"light\">Upcoming Economic Events</Badge></h3>\n          <EconDataWidget />\n        </Col>\n\n      </Row>\n    </Container>\n    </Fragment>\n  )\n\n }\n\nexport default Dashboard;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction LoginErrors(loginErrors) {\n    if (Object.keys(loginErrors).length) {\n        return (\n            <Alert variant=\"danger\" >\n                <p>\n                    Oops, incorrect email or password.\n                </p>\n            </Alert>\n        )\n    }\n}\n\nexport default LoginErrors","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport { Row, Col, Container, Button } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\nimport { receiveUser } from '../../reducers/authReducer';\nimport LoginErrors from '../Errors/LoginErrors';\n\nconst Login = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  const [loginErrors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = credentials;\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        dispatch(receiveUser(user));\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        setErrors(error)\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n\n        <Row>\n          <Col>\n            <h1>Login to access the full platform.</h1>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          {LoginErrors(loginErrors)}\n\n            <Form onSubmit={handleSubmit}>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} value={credentials.password} />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.REGISTER} variant=\"secondary\">New User? Register Here</Button>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.FORGOT_PASSWORD} variant=\"link\">Forgot Password</Button>\n\n          </Col>\n        </Row>\n\n      </Container>\n    </Fragment>\n\n  );\n};\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction RegisterErrors(err) {\n    if (err.message) {\n        return (\n            <Alert variant=\"danger\" >\n                <p>\n                    {err.message}\n                </p>\n            </Alert>\n        )\n    }\n}\n\nexport default RegisterErrors","import React, { useState, useEffect, Fragment } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\nimport RegisterErrors from '../Errors/RegisterError';\n\nconst Register = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  const history = useHistory();\n  const [registerErrors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = credentials;\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log('Success signing up', user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        setErrors(error);\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n        <Row>\n          <Col>\n            <h1>Register to access the full platform.</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {RegisterErrors(registerErrors)}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} value={credentials.password} />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={ROUTES.LOGIN} variant=\"secondary\">Back to Login</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={ROUTES.FORGOT_PASSWORD} variant=\"link\">Forgot Password</Button>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(Register);\n","import React, { useState, Fragment, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\n\nconst ForgotPassword = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '' });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email } = credentials;\n    firebase.auth().sendPasswordResetEmail(email)\n      .then((user) => {\n        // Consider using a redirect with history.push('/login') here and displaying a message via props\n        alert('Please check your email...');\n      }).catch((e) => {\n        console.log(e);\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n\n        <Row>\n          <Col>\n            <h1>Reset Password</h1>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form onSubmit={handleSubmit}>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n\n            </Form>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.LOGIN} variant=\"secondary\">Login Page </Button>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.REGISTER} variant=\"secondary\">Register Page</Button>\n\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction ResetErrors(err) {\n    if (err.message) {\n        return (\n            <Alert variant=\"danger\" >\n                <p>\n                    {err.message}\n                </p>\n            </Alert>\n        )\n    }\n}\n\nexport default ResetErrors","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction EmailSuccess(emailSuccess) {\n    if (emailSuccess) {\n        return (\n            <Alert variant=\"success\" >\n                <p>\n                    Success.\n                </p>\n            </Alert>\n        )\n    }\n\n}\n\nexport default EmailSuccess","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction PasswordSuccess(passwordSuccess) {\n    if (passwordSuccess) {\n        return (\n            <Alert variant=\"success\" >\n                <p>\n                    Password reset email sent.\n                </p>\n            </Alert>\n        )\n    }\n\n}\n\nexport default PasswordSuccess","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ProfileAPI from '../../util/profileAPI';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport ResetErrors from '../Errors/ResetErrors';\nimport EmailSuccess from '../Success/EmailSuccess';\nimport PasswordSuccess from '../Success/PasswordSuccess';\nimport { useHistory } from \"react-router-dom\";\nimport * as ROUTES from \"../../routes/routes\";\n\n\nconst Profile = ({ currentUser, isAuthed }) => {\n  const [emailFlag, emailSwitch] = useState(false);\n  const [emailValue, setEmail] = useState(currentUser.email);\n  const [tempEmail, setTempEmail] = useState();\n  const [resetErrors, setErrors] = useState({});\n  const [emailSuccess, setEmailSuccess] = useState(false);\n  const [passwordSuccess, setPassSuccess] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(ROUTES.LOGIN)\n    } else {\n      setEmail(firebase.auth().currentUser.email);\n      setEmailSuccess(false);\n      setPassSuccess(false);\n    }\n  }, [isAuthed, history]);\n\n  function resetEmail() {\n    ProfileAPI.emailReset(tempEmail)\n    .then((res) => {\n      setEmail(tempEmail);\n      emailSwitch(false);\n      setEmailSuccess(true);\n      setErrors({});\n      if (passwordSuccess) {\n        setPassSuccess(false);\n      };\n    })\n    .catch(error => {\n        setErrors(error);\n      })\n  };\n\n  function resetPassword() {\n    ProfileAPI.passwordReset()\n      .then((res) => {\n        setPassSuccess(true);\n        setErrors({});\n        if (emailSuccess) {\n          setEmailSuccess(false);\n        }\n      })\n      .catch((error) => {\n        setErrors(error);\n      })\n  }\n\n  function handleChange(e) {\n    setTempEmail(e.currentTarget.value)\n  }\n\n  function emailComponent() {\n    if (emailFlag) {\n      return (\n          <Form>\n            {ResetErrors(resetErrors)}\n            <Form.Group>\n              <Form.Label>\n                <h2>\n                  Email Address\n                </h2>\n              </Form.Label>\n              <Form.Control\n                placeholder={emailValue}\n                onChange={(e) => handleChange(e)}\n              >\n              </Form.Control>\n            </Form.Group>\n            <Button className=\"mt-4\" onClick={() => resetEmail()}>\n              Save\n            </Button>\n            <Button className=\"mt-4 ml-2\" variant=\"secondary\" onClick={() => emailSwitch(false)}>\n              Cancel\n            </Button>\n          </Form>\n      )\n    } else {\n      return (\n        <Container>\n          {EmailSuccess(emailSuccess)}\n          {PasswordSuccess(passwordSuccess)}\n          {ResetErrors(resetErrors)}\n          <Row >\n            <Col >\n              <h2 className=\"border border-white rounded pl-3 pb-2 pt-2\" >\n                Email\n              </h2> \n              <h6 className=\"pl-3\">\n                {emailValue}  \n              </h6>\n              <Button className=\"ml-3\" onClick={() => emailSwitch(true)}>\n                Reset Email\n              </Button>\n            </Col>\n            <Col >\n              <h2 className=\"border border-white rounded pl-3 pt-2 pb-2\" >\n                Password\n              </h2>\n              <h6 className=\"p-2\">\n              </h6>\n              <Button className=\"ml-3 mt-1\" onClick={() => resetPassword()}>\n                Reset Password\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n\n  }\n\n  return (\n    <div className=\"About\">\n      <Container fluid>\n        <Row>\n          <Col align=\"center\">\n            <h1>My Account Settings</h1>\n          </Col>\n        </Row>\n\n        {emailComponent()}\n        \n      </Container>\n    </div>\n  )\n};\n\nconst MSTP = (state) => {\n  let auth = state.auth;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed:  auth.isAuthed\n  };\n}\n\nexport default connect(MSTP)(Profile);\n\n\n","import firebase from 'firebase';\n\nexport function emailReset(newEmail) {\n    let user = firebase.auth().currentUser;\n\n    return (\n        user.updateEmail(newEmail)\n    )\n}\n\nexport function passwordReset() {\n    let auth = firebase.auth();\n    let user = firebase.auth().currentUser;\n    let email = user.email;\n\n    return auth.sendPasswordResetEmail(email);\n}","import React, { useState, useEffect, Fragment, useRef } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap';\nimport ReactQuill from 'react-quill';\nimport { useHistory } from 'react-router-dom';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\nimport validateNote from '../../validations/note.js';\nimport { receiveErrors } from '../../actions/notes.js';\nimport NoteErrors from '../Errors/NoteErrors';\n\n\nconst NewNote = ({ isAuthed, currentUser }) => {\n  // Hooks\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [bodyValue, setBodyValue] = useState('');\n  const [titleValue, setTitleValue] = useState('');\n  const[noteErrors, setErrors] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(ROUTES.LOGIN);\n    }\n  }, [isAuthed, history]);\n\n  // Handlers\n  const handleSubmit = () => {\n    if (currentUser) {\n      // console.log('Payload for note submission: ', bodyValue); // eslint-disable-line\n      const newNoteKey = firebase.database().ref('notes').push().key;\n      const data = {\n        title: titleValue,\n        body: bodyValue,\n        createdBy: currentUser.id,\n        createdAt: new Date().getTime(),\n        id: newNoteKey,\n      };\n      const updates = {};\n      updates[`/notes/${newNoteKey}`] = data;\n      updates[`/user-notes/${currentUser.id}/${newNoteKey}`] = data;\n      \n      let bodyText = ref.current.getEditor().getText().replace(/\\n/ig, '');\n      const { errors, isValid } = validateNote(titleValue, bodyText);\n      if (!isValid) {\n        setErrors(errors);\n        dispatch(receiveErrors(errors));\n        return;\n      } else {\n        firebase.database().ref().update(updates)\n            .then(() => {\n              setBodyValue('');\n              setTitleValue('');\n              history.push('/notes');\n            })\n            .catch(err => console.log('error posting note: ', err));\n        } \n        // this statement seems unncessary, because the user cannot access notes if they are not logged in\n        // else {\n        //   console.log('Error: User not logged in');\n        // }   \n      }\n\n\n  };\n\n  const handleCancel = () => {\n    setBodyValue('');\n    setTitleValue('');\n    history.push('/notes');\n  };\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        {NoteErrors(noteErrors)}\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  value={titleValue}\n                  onChange={e => setTitleValue(e.target.value)}\n                  placeholder=\"Title (required)\"\n                />\n              </Form.Group>\n            </Form>\n            <ReactQuill\n              theme=\"snow\"\n              value={bodyValue}\n              onChange={setBodyValue}\n              id=\"notes-container\"\n              placeholder=\"Compose a note (required)\"\n              ref={ref}\n            />\n            <Button className=\"mr-3 mt-4\" variant=\"primary\" onClick={handleSubmit}>Create</Button>\n            <Button className=\"mr-3 mt-4\" variant=\"secondary\" onClick={handleCancel}>Cancel</Button>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(NewNote);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Provider, useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Axios from \"axios\";\nimport ReactGa from 'react-ga';\n\n//Local Imports\nimport firebase from './firebase/firebase';\nimport { store, persistor } from './store';\nimport Footer from './components/Footer';\nimport OneStock from './components/Stocks/OneStock';\nimport Navigation from './components/NavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport About from './components/About';\nimport DD from './components/Research/DD';\nimport UnusualOptions from './components/Options/UnusualOptions';\nimport NewsFeed from './components/News/NewsFeed';\nimport Notes from './components/Notes/Notes';\nimport NoteDetail from './components/Notes/NoteDetail';\nimport EditNote from './components/Notes/EditNote';\nimport 'react-quill/dist/quill.snow.css';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport ForgotPassword from './components/Auth/ForgotPassword';\nimport * as ROUTES from './routes/routes';\n// import StripeSubscribe from './components/Stripe/Subscribe';\nimport Profile from './components/Account/Profile';\nimport NewNote from './components/Notes/NewNote';\nimport { receiveUser, clearUser } from './reducers/authReducer';\nimport Loader from './components/Loader';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\n\nconst App = () => {\n\n  useEffect(() => {\n    ReactGa.initialize('UA-176664458-1')\n\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  });\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in.\n        setIsLoading(false);\n        dispatch(receiveUser(user));\n      } else {\n        // No user is signed in.\n        setIsLoading(false);\n        dispatch(clearUser());\n      }\n    });\n  }, [dispatch]);\n\n  \n  Axios({\n    method: \"GET\",\n    url: \"https://findmarketplays.herokuapp.com/\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    console.log(res.data.message);\n  });\n\n  //\"https://findmarketplays.herokuapp.com/\"\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n\n        { isLoading ? (\n          <Loader />\n        ) : (\n          <Router>\n            <Fragment>\n              <Navigation />\n              <div className=\"app__wrapper\">\n                <Switch>\n                  <Route exact path={ROUTES.DASHBOARD}>\n                    <Dashboard />\n                  </Route>\n\n                  <Route path={ROUTES.LOGIN}>\n                    <Login />\n                  </Route>\n\n                  <Route path={ROUTES.LOGOUT}>\n                    <Login />\n                  </Route>\n\n                  <Route path={ROUTES.REGISTER}>\n                    <Register />\n                  </Route>\n\n                  <Route path={ROUTES.FORGOT_PASSWORD}>\n                    <ForgotPassword />\n                  </Route>\n\n                  <Route path={ROUTES.SINGLE_STOCK_RESEARCH}>\n                    <OneStock />\n                  </Route>\n\n                  <Route path={ROUTES.DD}>\n                    <DD />\n                  </Route>\n\n                  <Route path={ROUTES.NEW_NOTE}>\n                    <NewNote />\n                  </Route>\n\n                  <Route path={ROUTES.EDIT_NOTE}>\n                    <EditNote />\n                  </Route>\n\n                  <Route path={ROUTES.NOTES}>\n                    <Notes />\n                  </Route>\n\n                  <Route path={ROUTES.NOTE_DETAIL}>\n                    <NoteDetail />\n                  </Route>\n\n                  <Route path={ROUTES.UNUSUAL_OPTIONS}>\n                    <UnusualOptions />\n                  </Route>\n\n                  <Route path={ROUTES.NEWS_FEED}>\n                    <NewsFeed />\n                  </Route>\n\n                  {/* <Route path={ROUTES.STRIPE_SUBSCRIBE}>\n                    <StripeSubscribe />\n                  </Route> */}\n\n                  <Route path={ROUTES.PROFILE}>\n                    <Profile />\n                  </Route>\n\n                  <Route path={ROUTES.ABOUT}>\n                    <About />\n                  </Route>\n                </Switch>\n              </div>\n              <Footer />\n            </Fragment>\n          </Router>\n        )}\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const Validator = require(\"validator\");\n\nmodule.exports = function validateNote(title, body) {\n    let errors = {};\n\n    if (Validator.isEmpty(title)) {\n        errors.title = \"Title cannot be empty\"\n    }\n\n    if (Validator.isEmpty(body)) {\n        errors.body = \"Body cannot be empty\"\n    }\n    return {\n        errors,\n        isValid: Object.keys(errors).length === 0\n    }\n}"],"sourceRoot":""}