{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // SLICE\n\nconst authSlice = createSlice({\n  name: 'AUTH',\n  initialState: {\n    currentUser: {},\n    isAuthed: false\n  },\n  reducers: {\n    clearUser: () => ({\n      currentUser: {},\n      isAuthed: false\n    }),\n    receiveUser: shapeUser\n  }\n});\nexport default authSlice.reducer; // ACTIONS\n\nexport const {\n  clearUser,\n  receiveUser\n} = authSlice.actions; // REDUCER HELPERS\n\nfunction shapeUser(state, action) {\n  const {\n    uid,\n    email,\n    displayName\n  } = action.payload;\n  return { ...state,\n    currentUser: {\n      id: uid,\n      email,\n      displayName\n    },\n    isAuthed: true\n  };\n} // THUNKS -- ASYNC ACTION CREATORS","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/reducers/authReducer.js"],"names":["createSlice","authSlice","name","initialState","currentUser","isAuthed","reducers","clearUser","receiveUser","shapeUser","reducer","actions","state","action","uid","email","displayName","payload","id"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,EADD;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,OAAO;AAChBH,MAAAA,WAAW,EAAE,EADG;AAEhBC,MAAAA,QAAQ,EAAE;AAFM,KAAP,CADH;AAKRG,IAAAA,WAAW,EAAEC;AALL;AANkB,CAAD,CAA7B;AAeA,eAAeR,SAAS,CAACS,OAAzB,C,CAEA;;AACA,OAAO,MAAM;AACXH,EAAAA,SADW;AAEXC,EAAAA;AAFW,IAGTP,SAAS,CAACU,OAHP,C,CAKP;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAA8BH,MAAM,CAACI,OAA3C;AACA,SAAO,EACL,GAAGL,KADE;AAELR,IAAAA,WAAW,EAAE;AACXc,MAAAA,EAAE,EAAEJ,GADO;AAEXC,MAAAA,KAFW;AAGXC,MAAAA;AAHW,KAFR;AAOLX,IAAAA,QAAQ,EAAE;AAPL,GAAP;AASD,C,CACD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// SLICE\nconst authSlice = createSlice({\n  name: 'AUTH',\n  initialState: {\n    currentUser: {},\n    isAuthed: false,\n  },\n  reducers: {\n    clearUser: () => ({\n      currentUser: {},\n      isAuthed: false,\n    }),\n    receiveUser: shapeUser,\n  },\n});\n\nexport default authSlice.reducer;\n\n// ACTIONS\nexport const {\n  clearUser,\n  receiveUser,\n} = authSlice.actions;\n\n// REDUCER HELPERS\nfunction shapeUser(state, action) {\n  const { uid, email, displayName } = action.payload;\n  return {\n    ...state,\n    currentUser: {\n      id: uid,\n      email,\n      displayName,\n    },\n    isAuthed: true,\n  };\n}\n// THUNKS -- ASYNC ACTION CREATORS\n"]},"metadata":{},"sourceType":"module"}