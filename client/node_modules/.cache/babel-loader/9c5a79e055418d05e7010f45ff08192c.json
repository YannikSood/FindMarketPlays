{"ast":null,"code":"import _defineProperty from\"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment,useEffect}from'react';import{Row,Col,Container}from'react-bootstrap';import{connect}from'react-redux';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import{useHistory}from'react-router-dom';import*as ROUTES from'../../routes/routes';import firebase from'../../firebase/firebase';var ForgotPassword=function ForgotPassword(_ref){var isAuthed=_ref.isAuthed;var _useState=useState({email:''}),_useState2=_slicedToArray(_useState,2),credentials=_useState2[0],setCredentials=_useState2[1];var history=useHistory();useEffect(function(){if(isAuthed)history.push('/');},[isAuthed,history]);var handleChange=function handleChange(e){setCredentials(_objectSpread(_objectSpread({},credentials),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();var email=credentials.email;firebase.auth().sendPasswordResetEmail(email).then(function(user){// Consider using a redirect with history.push('/login') here and displaying a message via props\nalert('Please check your email...');}).catch(function(e){console.log(e);});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Reset Password\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email address\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"email\",type:\"email\",placeholder:\"Enter email\",onChange:handleChange,value:credentials.email}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"We'll never share your email with anyone else.\")),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{href:ROUTES.LOGIN,variant:\"secondary\"},\"Login Page \"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{href:ROUTES.REGISTER,variant:\"secondary\"},\"Register Page\")))));};var mapStateToProps=function mapStateToProps(state){var auth=state.auth;return{isAuthed:auth.isAuthed};};export default connect(mapStateToProps)(ForgotPassword);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Auth/ForgotPassword.js"],"names":["React","useState","Fragment","useEffect","Row","Col","Container","connect","Button","Form","useHistory","ROUTES","firebase","ForgotPassword","isAuthed","email","credentials","setCredentials","history","push","handleChange","e","target","name","value","handleSubmit","event","preventDefault","auth","sendPasswordResetEmail","then","user","alert","catch","console","log","LOGIN","REGISTER","mapStateToProps","state"],"mappings":"kjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,iBAApC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACDb,QAAQ,CAAC,CAAEc,KAAK,CAAE,EAAT,CAAD,CADP,wCAChCC,WADgC,eACnBC,cADmB,eAEvC,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAEAP,SAAS,CAAC,UAAM,CACd,GAAIW,QAAJ,CAAcI,OAAO,CAACC,IAAR,CAAa,GAAb,EACf,CAFQ,CAEN,CAACL,QAAD,CAAWI,OAAX,CAFM,CAAT,CAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BJ,cAAc,gCAAMD,WAAN,wBAAoBK,CAAC,CAACC,MAAF,CAASC,IAA7B,CAAoCF,CAAC,CAACC,MAAF,CAASE,KAA7C,GAAd,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GAD8B,GAEtBZ,CAAAA,KAFsB,CAEZC,WAFY,CAEtBD,KAFsB,CAG9BH,QAAQ,CAACgB,IAAT,GAAgBC,sBAAhB,CAAuCd,KAAvC,EACGe,IADH,CACQ,SAACC,IAAD,CAAU,CACd;AACAC,KAAK,CAAC,4BAAD,CAAL,CACD,CAJH,EAIKC,KAJL,CAIW,SAACZ,CAAD,CAAO,CACda,OAAO,CAACC,GAAR,CAAYd,CAAZ,EACD,CANH,EAOD,CAVD,CAWA,mBACE,oBAAC,QAAD,mBACE,oBAAC,SAAD,mBAEE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,+CADF,CADF,CAFF,cAQE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,QAAQ,CAAEI,YAAhB,eAEE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,sBADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,IAAI,CAAC,OAAhC,CAAwC,WAAW,CAAC,aAApD,CAAkE,QAAQ,CAAEL,YAA5E,CAA0F,KAAK,CAAEJ,WAAW,CAACD,KAA7G,EAFF,cAGE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,YAArB,mDAHF,CAFF,cAUE,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,WAVF,CADF,CADF,CARF,cA4BE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBAEE,oBAAC,MAAD,EAAQ,IAAI,CAAEJ,MAAM,CAACyB,KAArB,CAA4B,OAAO,CAAC,WAApC,gBAFF,CADF,CA5BF,cAoCE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBAEE,oBAAC,MAAD,EAAQ,IAAI,CAAEzB,MAAM,CAAC0B,QAArB,CAA+B,OAAO,CAAC,WAAvC,kBAFF,CADF,CApCF,CADF,CADF,CAgDD,CAvED,CAyEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,IACzBX,CAAAA,IADyB,CAChBW,KADgB,CACzBX,IADyB,CAGjC,MAAO,CACLd,QAAQ,CAAEc,IAAI,CAACd,QADV,CAAP,CAGD,CAND,CAOA,cAAeP,CAAAA,OAAO,CAAC+B,eAAD,CAAP,CAAyBzB,cAAzB,CAAf","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\n\nconst ForgotPassword = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '' });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email } = credentials;\n    firebase.auth().sendPasswordResetEmail(email)\n      .then((user) => {\n        // Consider using a redirect with history.push('/login') here and displaying a message via props\n        alert('Please check your email...');\n      }).catch((e) => {\n        console.log(e);\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n\n        <Row>\n          <Col>\n            <h1>Reset Password</h1>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form onSubmit={handleSubmit}>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n\n            </Form>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.LOGIN} variant=\"secondary\">Login Page </Button>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.REGISTER} variant=\"secondary\">Register Page</Button>\n\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}