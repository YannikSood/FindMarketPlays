{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Auth/ForgotPassword.js\";\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\n\nconst ForgotPassword = ({\n  isAuthed\n}) => {\n  const [credentials, setCredentials] = useState({\n    email: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      email\n    } = credentials;\n    firebase.auth().sendPasswordResetEmail(email).then(user => {\n      // Consider using a redirect with history.push('/login') here and displaying a message via props\n      alert('Please check your email...');\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    onChange: handleChange,\n    value: credentials.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: ROUTES.LOGIN,\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Login Page \"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: ROUTES.REGISTER,\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Register Page\")))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  return {\n    isAuthed: auth.isAuthed\n  };\n};\n\nexport default connect(mapStateToProps)(ForgotPassword);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Auth/ForgotPassword.js"],"names":["React","useState","Fragment","useEffect","Row","Col","Container","connect","Button","Form","useHistory","ROUTES","firebase","ForgotPassword","isAuthed","credentials","setCredentials","email","history","push","handleChange","e","target","name","value","handleSubmit","event","preventDefault","auth","sendPasswordResetEmail","then","user","alert","catch","console","log","LOGIN","REGISTER","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\n\nconst ForgotPassword = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '' });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email } = credentials;\n    firebase.auth().sendPasswordResetEmail(email)\n      .then((user) => {\n        // Consider using a redirect with history.push('/login') here and displaying a message via props\n        alert('Please check your email...');\n      }).catch((e) => {\n        console.log(e);\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n\n        <Row>\n          <Col>\n            <h1>Reset Password</h1>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form onSubmit={handleSubmit}>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n\n            </Form>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.LOGIN} variant=\"secondary\">Login Page </Button>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n            <Button href={ROUTES.REGISTER} variant=\"secondary\">Register Page</Button>\n\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}