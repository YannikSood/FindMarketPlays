{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Options/UnusualOptions.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport UnusualOptionsFlow from './UnusualOptionFlow';\nimport { debounce } from '../../helpers/SearchHelper';\n\nconst UnusualOptions = ({\n  isAuthed\n}) => {\n  // Hooks\n  const [searchedValue, setSearchedValue] = useState('TSLA');\n  const [options, setOptions] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n      const fetchData = () => {\n        const url = `/optionsAPI/${searchedValue}`;\n        fetch(url, {\n          headers: {\n            Accept: 'application/json'\n          }\n        }).then(res => res.json().then(json => {\n          // console.log(json);\n          setOptions(json.message.option_activity || []);\n        })).catch(err => console.error(err)); // eslint-disable-line\n      };\n\n      debounce(fetchData());\n    }\n  }, [isAuthed, history, searchedValue]); // Handlers\n\n  const handleInputChange = event => {\n    setSearchedValue(event.target.value.toUpperCase());\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScrollingWidget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"widget__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Find Unusual Options Trades\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"ENTER STOCK TICKER\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: searchedValue,\n    onChange: handleInputChange,\n    placeholder: \"Enter Stock Ticker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, searchedValue && options.length > 0 && /*#__PURE__*/React.createElement(UnusualOptionsFlow, {\n    value: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  return {\n    isAuthed: auth.isAuthed\n  };\n};\n\nexport default connect(mapStateToProps)(UnusualOptions);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Options/UnusualOptions.js"],"names":["React","useState","useEffect","Fragment","Row","Col","connect","Container","Form","useHistory","ScrollingWidget","UnusualOptionsFlow","debounce","UnusualOptions","isAuthed","searchedValue","setSearchedValue","options","setOptions","history","push","fetchData","url","fetch","headers","Accept","then","res","json","message","option_activity","catch","err","console","error","handleInputChange","event","target","value","toUpperCase","length","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport UnusualOptionsFlow from './UnusualOptionFlow';\nimport { debounce } from '../../helpers/SearchHelper';\n\nconst UnusualOptions = ({ isAuthed }) => {\n  // Hooks\n  const [searchedValue, setSearchedValue] = useState('TSLA');\n  const [options, setOptions] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n        const fetchData = () => {\n          const url = `/optionsAPI/${searchedValue}`;\n          fetch(url, { headers: { Accept: 'application/json' } })\n            .then(res => res.json()\n              .then((json) => {\n                // console.log(json);\n                setOptions(json.message.option_activity || []);\n              }))\n            .catch(err => console.error(err)); // eslint-disable-line\n        };\n        debounce(fetchData());  \n    }\n  }, [isAuthed, history, searchedValue]);\n\n  // Handlers\n  const handleInputChange = (event) => {\n    setSearchedValue(event.target.value.toUpperCase());\n  };\n\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"widget__wrapper\">\n          <Col md={7}>\n            <Form>\n              <h1>Find Unusual Options Trades</h1>\n              <h5>ENTER STOCK TICKER</h5>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  value={searchedValue}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Stock Ticker\"\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          {searchedValue && options.length > 0 && <UnusualOptionsFlow value={options} />}\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(UnusualOptions);\n"]},"metadata":{},"sourceType":"module"}