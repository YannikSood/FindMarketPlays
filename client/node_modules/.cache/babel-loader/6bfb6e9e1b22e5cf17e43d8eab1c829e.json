{"ast":null,"code":"import _slicedToArray from\"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment,useRef,useEffect}from\"react\";import{connect,useDispatch}from\"react-redux\";import{Row,Col,Container,Form,Button}from\"react-bootstrap\";import ReactQuill from\"react-quill\";import{useHistory}from\"react-router-dom\";import ScrollingWidget from\"../Widgets/ScrollingWidget\";import firebase from\"../../firebase/firebase\";import{receiveErrors}from'../../actions/notes';import validateNote from'../../validations/note';import NoteErrors from'../Errors/NoteErrors';var EditNote=function EditNote(_ref){var currentUser=_ref.currentUser,note=_ref.note;var dispatch=useDispatch();var history=useHistory();var _useState=useState(note.body),_useState2=_slicedToArray(_useState,2),bodyValue=_useState2[0],setBodyValue=_useState2[1];var _useState3=useState(note.title),_useState4=_slicedToArray(_useState3,2),titleValue=_useState4[0],setTitleValue=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),noteErrors=_useState6[0],setErrors=_useState6[1];var ref=useRef();useEffect(function(){if(titleValue===undefined||bodyValue===undefined){history.push(\"/notes\");}},[]);var update={title:titleValue,body:bodyValue};function handleSubmit(){var bodyText=ref.current.getEditor().getText().replace(/\\n/ig,'');var _validateNote=validateNote(titleValue,bodyText),errors=_validateNote.errors,isValid=_validateNote.isValid;if(!isValid){setErrors(errors);dispatch(receiveErrors(errors));return;}else{firebase.database().ref(\"/user-notes/\".concat(currentUser.id,\"/\").concat(note.id)).update(update);history.push(\"/notes\");}}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ScrollingWidget,null),/*#__PURE__*/React.createElement(Container,null,NoteErrors(noteErrors),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",value:titleValue,onChange:function onChange(e){return setTitleValue(e.target.value);},placeholder:\"Title\"}))),/*#__PURE__*/React.createElement(ReactQuill,{theme:\"snow\",value:bodyValue||\"\",onChange:setBodyValue,id:\"notes-container\",placeholder:\"Compose a note...\",ref:ref}),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",className:\"mt-4\",onClick:function onClick(){handleSubmit();}},\"Save\"),/*#__PURE__*/React.createElement(Button,{className:\"ml-2 mt-4\",variant:\"secondary\",onClick:function onClick(){return history.push(\"/notes\");}},\"Cancel\")))));};var mapStateToProps=function mapStateToProps(state){var auth=state.auth,note=state.note;return{currentUser:auth.currentUser,note:note};};export default connect(mapStateToProps)(EditNote);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Notes/EditNote.js"],"names":["React","useState","Fragment","useRef","useEffect","connect","useDispatch","Row","Col","Container","Form","Button","ReactQuill","useHistory","ScrollingWidget","firebase","receiveErrors","validateNote","NoteErrors","EditNote","currentUser","note","dispatch","history","body","bodyValue","setBodyValue","title","titleValue","setTitleValue","noteErrors","setErrors","ref","undefined","push","update","handleSubmit","bodyText","current","getEditor","getText","replace","errors","isValid","database","id","e","target","value","mapStateToProps","state","auth"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,MAApC,CAA4CC,SAA5C,KAA6D,OAA7D,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,aAArC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,CAA8BC,IAA9B,CAAoCC,MAApC,KAAkD,iBAAlD,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2B,IAAxBC,CAAAA,WAAwB,MAAxBA,WAAwB,CAAXC,IAAW,MAAXA,IAAW,CAExC,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAHwC,cAINZ,QAAQ,CAACoB,IAAI,CAACG,IAAN,CAJF,wCAIjCC,SAJiC,eAItBC,YAJsB,8BAKJzB,QAAQ,CAACoB,IAAI,CAACM,KAAN,CALJ,yCAKjCC,UALiC,eAKrBC,aALqB,8BAMR5B,QAAQ,CAAC,EAAD,CANA,yCAMjC6B,UANiC,eAMrBC,SANqB,eAOxC,GAAMC,CAAAA,GAAG,CAAG7B,MAAM,EAAlB,CAEAC,SAAS,CAAC,UAAM,CACd,GAAIwB,UAAU,GAAKK,SAAf,EAA4BR,SAAS,GAAKQ,SAA9C,CAAyD,CACvDV,OAAO,CAACW,IAAR,CAAa,QAAb,EACD,CACF,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,MAAM,CAAG,CACbR,KAAK,CAAEC,UADM,CAEbJ,IAAI,CAAEC,SAFO,CAAf,CAMA,QAASW,CAAAA,YAAT,EAAwB,CACtB,GAAIC,CAAAA,QAAQ,CAAGL,GAAG,CAACM,OAAJ,CAAYC,SAAZ,GAAwBC,OAAxB,GAAkCC,OAAlC,CAA0C,MAA1C,CAAkD,EAAlD,CAAf,CADsB,kBAEMxB,YAAY,CAACW,UAAD,CAAaS,QAAb,CAFlB,CAEdK,MAFc,eAEdA,MAFc,CAENC,OAFM,eAENA,OAFM,CAGtB,GAAI,CAACA,OAAL,CAAc,CACZZ,SAAS,CAACW,MAAD,CAAT,CACApB,QAAQ,CAACN,aAAa,CAAC0B,MAAD,CAAd,CAAR,CACA,OACD,CAJD,IAIO,CACL3B,QAAQ,CAAC6B,QAAT,GAAoBZ,GAApB,uBAAuCZ,WAAW,CAACyB,EAAnD,aAAyDxB,IAAI,CAACwB,EAA9D,GAAoEV,MAApE,CAA2EA,MAA3E,EACAZ,OAAO,CAACW,IAAR,CAAa,QAAb,EACD,CAEF,CAED,mBACE,oBAAC,QAAD,mBACE,oBAAC,eAAD,MADF,cAEI,oBAAC,SAAD,MACGhB,UAAU,CAACY,UAAD,CADb,cAEE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,UAFT,CAGE,QAAQ,CAAE,kBAACkB,CAAD,QAAOjB,CAAAA,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAHZ,CAIE,WAAW,CAAC,OAJd,EADF,CADF,CADF,cAWE,oBAAC,UAAD,EACE,KAAK,CAAC,MADR,CAEE,KAAK,CAAEvB,SAAS,EAAI,EAFtB,CAGE,QAAQ,CAAEC,YAHZ,CAIE,EAAE,CAAC,iBAJL,CAKE,WAAW,CAAC,mBALd,CAME,GAAG,CAAEM,GANP,EAXF,cAmBE,oBAAC,MAAD,EACE,OAAO,CAAC,SADV,CAEE,SAAS,CAAC,MAFZ,CAGE,OAAO,CAAE,kBAAM,CAACI,YAAY,GAAG,CAHjC,SAnBF,cA0BE,oBAAC,MAAD,EACE,SAAS,CAAC,WADZ,CAEE,OAAO,CAAC,WAFV,CAGE,OAAO,CAAE,yBAAMb,CAAAA,OAAO,CAACW,IAAR,CAAa,QAAb,CAAN,EAHX,WA1BF,CADF,CAFF,CAFJ,CADF,CA4CH,CA/ED,CAiFA,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,IACvBC,CAAAA,IADuB,CACRD,KADQ,CACvBC,IADuB,CACjB9B,IADiB,CACR6B,KADQ,CACjB7B,IADiB,CAG/B,MAAO,CACHD,WAAW,CAAE+B,IAAI,CAAC/B,WADf,CAEHC,IAAI,CAAEA,IAFH,CAAP,CAIH,CAPD,CASA,cAAehB,CAAAA,OAAO,CAAC4C,eAAD,CAAP,CAAyB9B,QAAzB,CAAf","sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nimport ScrollingWidget from \"../Widgets/ScrollingWidget\";\nimport firebase from \"../../firebase/firebase\";\nimport { receiveErrors } from '../../actions/notes';\nimport validateNote from '../../validations/note';\nimport NoteErrors from '../Errors/NoteErrors';\n\nconst EditNote = ({ currentUser, note }) => {    \n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [bodyValue, setBodyValue] = useState(note.body);\n    const [titleValue, setTitleValue] = useState(note.title);\n    const [noteErrors, setErrors] = useState({});\n    const ref = useRef();\n\n    useEffect(() => {\n      if (titleValue === undefined || bodyValue === undefined) {\n        history.push(\"/notes\");\n      }\n    }, [])\n    \n    const update = {\n      title: titleValue,\n      body: bodyValue\n    }\n\n    \n    function handleSubmit() {\n      let bodyText = ref.current.getEditor().getText().replace(/\\n/ig, '');\n      const { errors, isValid } = validateNote(titleValue, bodyText);\n      if (!isValid) {\n        setErrors(errors);\n        dispatch(receiveErrors(errors));\n        return;\n      } else {\n        firebase.database().ref(`/user-notes/${currentUser.id}/${note.id}`).update(update);\n        history.push(\"/notes\");\n      }\n\n    }\n\n    return (\n      <Fragment>\n        <ScrollingWidget />\n          <Container>\n            {NoteErrors(noteErrors)}\n            <Row>\n              <Col>\n                <Form>\n                  <Form.Group>\n                    <Form.Control\n                      type=\"text\"\n                      value={titleValue}\n                      onChange={(e) => setTitleValue(e.target.value)}\n                      placeholder=\"Title\"\n                    />\n                  </Form.Group>\n                </Form>\n                <ReactQuill\n                  theme=\"snow\"\n                  value={bodyValue || \"\"}\n                  onChange={setBodyValue}\n                  id=\"notes-container\"\n                  placeholder=\"Compose a note...\"\n                  ref={ref}\n                />\n                <Button\n                  variant=\"primary\"\n                  className=\"mt-4\"\n                  onClick={() => {handleSubmit()}}\n                >\n                  Save\n                </Button>\n                <Button\n                  className=\"ml-2 mt-4\"\n                  variant=\"secondary\"\n                  onClick={() => history.push(\"/notes\")}\n                >\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n      </Fragment>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { auth, note } = state;\n\n    return {\n        currentUser: auth.currentUser,\n        note: note\n    };\n};\n\nexport default connect(mapStateToProps)(EditNote);"]},"metadata":{},"sourceType":"module"}