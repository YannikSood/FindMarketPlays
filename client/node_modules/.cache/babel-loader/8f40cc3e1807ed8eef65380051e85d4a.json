{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Auth/Register.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\nimport RegisterErrors from '../Errors/RegisterError';\n\nconst Register = ({\n  isAuthed\n}) => {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n  const [registerErrors, setErrors] = useState({});\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = credentials;\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n      console.log('Success signing up', user);\n    }).catch(error => {\n      // Handle Errors here.\n      setErrors(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Register to access the full platform.\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, RegisterErrors(registerErrors), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    onChange: handleChange,\n    value: credentials.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange,\n    value: credentials.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: ROUTES.LOGIN,\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Back to Login\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: ROUTES.FORGOT_PASSWORD,\n    variant: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Forgot Password\")))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  return {\n    isAuthed: auth.isAuthed\n  };\n};\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Auth/Register.js"],"names":["React","useState","useEffect","Fragment","Row","Col","Container","useHistory","connect","Button","Form","ROUTES","firebase","RegisterErrors","Register","isAuthed","credentials","setCredentials","email","password","history","registerErrors","setErrors","push","handleChange","e","target","name","value","handleSubmit","event","preventDefault","auth","createUserWithEmailAndPassword","then","user","console","log","catch","error","LOGIN","FORGOT_PASSWORD","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ROUTES from '../../routes/routes';\nimport firebase from '../../firebase/firebase';\nimport RegisterErrors from '../Errors/RegisterError';\n\nconst Register = ({ isAuthed }) => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  const history = useHistory();\n  const [registerErrors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (isAuthed) history.push('/');\n  }, [isAuthed, history]);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = credentials;\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log('Success signing up', user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        setErrors(error);\n      });\n  };\n  return (\n    <Fragment>\n      <Container>\n        <Row>\n          <Col>\n            <h1>Register to access the full platform.</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {RegisterErrors(registerErrors)}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} value={credentials.email} />\n                <Form.Text className=\"text-muted\">\n                  We&apos;ll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} value={credentials.password} />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={ROUTES.LOGIN} variant=\"secondary\">Back to Login</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={ROUTES.FORGOT_PASSWORD} variant=\"link\">Forgot Password</Button>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}