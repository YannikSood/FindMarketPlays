{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Notes/EditNote.js\";\nimport React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nimport ScrollingWidget from \"../Widgets/ScrollingWidget\";\nimport firebase from \"../../firebase/firebase\";\nimport { receiveErrors } from '../../actions/notes';\nimport validateNote from '../../validations/note';\nimport NoteErrors from '../Errors/NoteErrors';\n\nconst EditNote = ({\n  currentUser,\n  note\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [bodyValue, setBodyValue] = useState(note.body);\n  const [titleValue, setTitleValue] = useState(note.title);\n  const [noteErrors, setErrors] = useState({});\n  const ref = useRef();\n  useEffect(() => {\n    if (titleValue === undefined || bodyValue === undefined) {\n      history.push(\"/notes\");\n    }\n  }, []);\n  const update = {\n    title: titleValue,\n    body: bodyValue\n  };\n\n  function handleSubmit() {\n    let bodyText = ref.current.getEditor().getText().replace(/\\n/ig, '');\n    const {\n      errors,\n      isValid\n    } = validateNote(titleValue, bodyText);\n\n    if (!isValid) {\n      setErrors(errors);\n      dispatch(receiveErrors(errors));\n      return;\n    } else {\n      firebase.database().ref(`/user-notes/${currentUser.id}/${note.id}`).update(update);\n      history.push(\"/notes\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScrollingWidget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, NoteErrors(noteErrors), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: titleValue,\n    onChange: e => setTitleValue(e.target.value),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(ReactQuill, {\n    theme: \"snow\",\n    value: bodyValue || \"\",\n    onChange: setBodyValue,\n    id: \"notes-container\",\n    placeholder: \"Compose a note...\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"mt-4\",\n    onClick: () => {\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2 mt-4\",\n    variant: \"secondary\",\n    onClick: () => history.push(\"/notes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    auth,\n    note\n  } = state;\n  return {\n    currentUser: auth.currentUser,\n    note: note\n  };\n};\n\nexport default connect(mapStateToProps)(EditNote);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Notes/EditNote.js"],"names":["React","useState","Fragment","useRef","useEffect","connect","useDispatch","Row","Col","Container","Form","Button","ReactQuill","useHistory","ScrollingWidget","firebase","receiveErrors","validateNote","NoteErrors","EditNote","currentUser","note","dispatch","history","bodyValue","setBodyValue","body","titleValue","setTitleValue","title","noteErrors","setErrors","ref","undefined","push","update","handleSubmit","bodyText","current","getEditor","getText","replace","errors","isValid","database","id","e","target","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nimport ScrollingWidget from \"../Widgets/ScrollingWidget\";\nimport firebase from \"../../firebase/firebase\";\nimport { receiveErrors } from '../../actions/notes';\nimport validateNote from '../../validations/note';\nimport NoteErrors from '../Errors/NoteErrors';\n\nconst EditNote = ({ currentUser, note }) => {    \n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [bodyValue, setBodyValue] = useState(note.body);\n    const [titleValue, setTitleValue] = useState(note.title);\n    const [noteErrors, setErrors] = useState({});\n    const ref = useRef();\n\n    useEffect(() => {\n      if (titleValue === undefined || bodyValue === undefined) {\n        history.push(\"/notes\");\n      }\n    }, [])\n    \n    const update = {\n      title: titleValue,\n      body: bodyValue\n    }\n\n    \n    function handleSubmit() {\n      let bodyText = ref.current.getEditor().getText().replace(/\\n/ig, '');\n      const { errors, isValid } = validateNote(titleValue, bodyText);\n      if (!isValid) {\n        setErrors(errors);\n        dispatch(receiveErrors(errors));\n        return;\n      } else {\n        firebase.database().ref(`/user-notes/${currentUser.id}/${note.id}`).update(update);\n        history.push(\"/notes\");\n      }\n\n    }\n\n    return (\n      <Fragment>\n        <ScrollingWidget />\n          <Container>\n            {NoteErrors(noteErrors)}\n            <Row>\n              <Col>\n                <Form>\n                  <Form.Group>\n                    <Form.Control\n                      type=\"text\"\n                      value={titleValue}\n                      onChange={(e) => setTitleValue(e.target.value)}\n                      placeholder=\"Title\"\n                    />\n                  </Form.Group>\n                </Form>\n                <ReactQuill\n                  theme=\"snow\"\n                  value={bodyValue || \"\"}\n                  onChange={setBodyValue}\n                  id=\"notes-container\"\n                  placeholder=\"Compose a note...\"\n                  ref={ref}\n                />\n                <Button\n                  variant=\"primary\"\n                  className=\"mt-4\"\n                  onClick={() => {handleSubmit()}}\n                >\n                  Save\n                </Button>\n                <Button\n                  className=\"ml-2 mt-4\"\n                  variant=\"secondary\"\n                  onClick={() => history.push(\"/notes\")}\n                >\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n      </Fragment>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { auth, note } = state;\n\n    return {\n        currentUser: auth.currentUser,\n        note: note\n    };\n};\n\nexport default connect(mapStateToProps)(EditNote);"]},"metadata":{},"sourceType":"module"}