{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Notes/Notes.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Row, Col, Container, Button, Table } from 'react-bootstrap';\nimport { formattedDateDifference } from '../../helpers/DateHelper';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport firebase from '../../firebase/firebase';\nimport Loader from '../Loader';\n\nconst Notes = ({\n  currentUser,\n  isAuthed\n}) => {\n  // Hooks\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n      firebase.database().ref(`/user-notes/${currentUser.id}`).once(\"value\").then(snapshot => {\n        setNotes(Object.values(snapshot === null || snapshot === void 0 ? void 0 : snapshot.val()) || []);\n        setIsLoading(false);\n      }).catch(err => {\n        console.log(\"error fetching notes: \", err);\n        setIsLoading(false);\n      });\n    }\n  }, [isAuthed, history, currentUser.id]); // useEffect(() => {\n  //   firebase.database().ref(`/user-notes/${currentUser.id}`).once('value')\n  //     .then((snapshot) => {\n  //       setNotes(Object.values(snapshot?.val()) || []);\n  //       setIsLoading(false);\n  //     })\n  //     .catch((err) => {\n  //       console.log('error fetching notes: ', err);\n  //       setIsLoading(false);\n  //     });\n  // }, [currentUser.id]);\n  // Handlers\n\n  const renderNotes = () => {\n    if (notes.length === 0) return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 46\n      }\n    }, \"Nothing here yet...\")));\n    return notes.map(note => /*#__PURE__*/React.createElement(\"tr\", {\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"note-title\",\n      to: `/note/${note.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, note.title)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, formattedDateDifference(note.createdAt))));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScrollingWidget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => history.push('/note/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Create\")))), isLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '25%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Posted\")), renderNotes()))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed\n  };\n};\n\nexport default connect(mapStateToProps)(Notes);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Notes/Notes.js"],"names":["React","useEffect","useState","Fragment","connect","useHistory","Link","Row","Col","Container","Button","Table","formattedDateDifference","ScrollingWidget","firebase","Loader","Notes","currentUser","isAuthed","history","isLoading","setIsLoading","notes","setNotes","push","database","ref","id","once","then","snapshot","Object","values","val","catch","err","console","log","renderNotes","length","map","note","title","width","createdAt","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Row, Col, Container, Button, Table } from 'react-bootstrap';\nimport { formattedDateDifference } from '../../helpers/DateHelper';\nimport ScrollingWidget from '../Widgets/ScrollingWidget';\nimport firebase from '../../firebase/firebase';\nimport Loader from '../Loader';\n\nconst Notes = ({ currentUser, isAuthed }) => {\n  // Hooks\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(\"/login\");\n    } else {\n      firebase\n        .database()\n        .ref(`/user-notes/${currentUser.id}`)\n        .once(\"value\")\n        .then((snapshot) => {\n          setNotes(Object.values(snapshot?.val()) || []);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(\"error fetching notes: \", err);\n          setIsLoading(false);\n        });\n    }\n  }, [isAuthed, history, currentUser.id]);\n\n  // useEffect(() => {\n  //   firebase.database().ref(`/user-notes/${currentUser.id}`).once('value')\n  //     .then((snapshot) => {\n  //       setNotes(Object.values(snapshot?.val()) || []);\n  //       setIsLoading(false);\n  //     })\n  //     .catch((err) => {\n  //       console.log('error fetching notes: ', err);\n  //       setIsLoading(false);\n  //     });\n  // }, [currentUser.id]);\n  // Handlers\n\n  const renderNotes = () => {\n    if (notes.length === 0) return <Row><Col><p>Nothing here yet...</p></Col></Row>;\n    return notes.map(note => (\n      <tr key={note.id}>\n          <td>\n            <Link className=\"note-title\" to={`/note/${note.id}`}>{note.title}</Link>\n          </td>\n        <td style={{ width: '25%' }}>{formattedDateDifference(note.createdAt)}</td>\n      </tr>\n    ));\n  };\n\n  return (\n    <Fragment>\n      <ScrollingWidget />\n      <Container>\n        <Row className=\"mb-3\">\n          <Col className=\"d-flex justify-content-between\">\n            <h1 className=\"d-inline-block\">Notes</h1>\n            <div>\n              <Button variant=\"primary\" onClick={() => history.push('/note/new')}>Create</Button>\n            </div>\n          </Col>\n        </Row>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table striped bordered hover variant=\"dark\">\n            <tbody>\n              <tr>\n                <th>Title</th>\n                <th style={{ width: '25%' }}>Posted</th>\n              </tr>\n              {renderNotes()}\n            </tbody>\n          </Table>\n        )}\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed,\n  };\n};\nexport default connect(mapStateToProps)(Notes);\n"]},"metadata":{},"sourceType":"module"}