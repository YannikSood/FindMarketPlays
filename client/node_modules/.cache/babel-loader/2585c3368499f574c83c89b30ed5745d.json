{"ast":null,"code":"import _objectSpread from\"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from'@reduxjs/toolkit';// SLICE\nvar authSlice=createSlice({name:'AUTH',initialState:{currentUser:{},isAuthed:false},reducers:{clearUser:function clearUser(){return{currentUser:{},isAuthed:false};},receiveUser:shapeUser}});export default authSlice.reducer;// ACTIONS\nvar _authSlice$actions=authSlice.actions,clearUser=_authSlice$actions.clearUser,receiveUser=_authSlice$actions.receiveUser;// REDUCER HELPERS\nexport{clearUser,receiveUser};function shapeUser(state,action){var _action$payload=action.payload,uid=_action$payload.uid,email=_action$payload.email,displayName=_action$payload.displayName;return _objectSpread(_objectSpread({},state),{},{currentUser:{id:uid,email:email,displayName:displayName},isAuthed:true});}// THUNKS -- ASYNC ACTION CREATORS","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/reducers/authReducer.js"],"names":["createSlice","authSlice","name","initialState","currentUser","isAuthed","reducers","clearUser","receiveUser","shapeUser","reducer","actions","state","action","payload","uid","email","displayName","id"],"mappings":"0LAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA;AACA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,MADsB,CAE5BC,YAAY,CAAE,CACZC,WAAW,CAAE,EADD,CAEZC,QAAQ,CAAE,KAFE,CAFc,CAM5BC,QAAQ,CAAE,CACRC,SAAS,CAAE,2BAAO,CAChBH,WAAW,CAAE,EADG,CAEhBC,QAAQ,CAAE,KAFM,CAAP,EADH,CAKRG,WAAW,CAAEC,SALL,CANkB,CAAD,CAA7B,CAeA,cAAeR,CAAAA,SAAS,CAACS,OAAzB,CAEA;uBAIIT,SAAS,CAACU,O,CAFZJ,S,oBAAAA,S,CACAC,W,oBAAAA,W,CAGF;8BACA,QAASC,CAAAA,SAAT,CAAmBG,KAAnB,CAA0BC,MAA1B,CAAkC,qBACIA,MAAM,CAACC,OADX,CACxBC,GADwB,iBACxBA,GADwB,CACnBC,KADmB,iBACnBA,KADmB,CACZC,WADY,iBACZA,WADY,CAEhC,sCACKL,KADL,MAEER,WAAW,CAAE,CACXc,EAAE,CAAEH,GADO,CAEXC,KAAK,CAALA,KAFW,CAGXC,WAAW,CAAXA,WAHW,CAFf,CAOEZ,QAAQ,CAAE,IAPZ,GASD,CACD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// SLICE\nconst authSlice = createSlice({\n  name: 'AUTH',\n  initialState: {\n    currentUser: {},\n    isAuthed: false,\n  },\n  reducers: {\n    clearUser: () => ({\n      currentUser: {},\n      isAuthed: false,\n    }),\n    receiveUser: shapeUser,\n  },\n});\n\nexport default authSlice.reducer;\n\n// ACTIONS\nexport const {\n  clearUser,\n  receiveUser,\n} = authSlice.actions;\n\n// REDUCER HELPERS\nfunction shapeUser(state, action) {\n  const { uid, email, displayName } = action.payload;\n  return {\n    ...state,\n    currentUser: {\n      id: uid,\n      email,\n      displayName,\n    },\n    isAuthed: true,\n  };\n}\n// THUNKS -- ASYNC ACTION CREATORS\n"]},"metadata":{},"sourceType":"module"}