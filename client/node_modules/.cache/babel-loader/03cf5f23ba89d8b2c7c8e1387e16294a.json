{"ast":null,"code":"var _jsxFileName = \"/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Account/Profile.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ProfileAPI from '../../util/profileAPI';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport ResetErrors from '../Errors/ResetErrors';\nimport EmailSuccess from '../Success/EmailSuccess';\nimport PasswordSuccess from '../Success/PasswordSuccess';\nimport { useHistory } from \"react-router-dom\";\nimport * as ROUTES from \"../../routes/routes\";\n\nconst Profile = ({\n  currentUser,\n  isAuthed\n}) => {\n  const [emailFlag, emailSwitch] = useState(false);\n  const [emailValue, setEmail] = useState(currentUser.email);\n  const [tempEmail, setTempEmail] = useState();\n  const [resetErrors, setErrors] = useState({});\n  const [emailSuccess, setEmailSuccess] = useState(false);\n  const [passwordSuccess, setPassSuccess] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(ROUTES.LOGIN);\n    } else {\n      setEmail(firebase.auth().currentUser.email);\n      setEmailSuccess(false);\n      setPassSuccess(false);\n    }\n  }, [isAuthed, history]);\n\n  function resetEmail() {\n    ProfileAPI.emailReset(tempEmail).then(res => {\n      setEmail(tempEmail);\n      emailSwitch(false);\n      setEmailSuccess(true);\n      setErrors({});\n\n      if (passwordSuccess) {\n        setPassSuccess(false);\n      }\n\n      ;\n    }).catch(error => {\n      setErrors(error);\n    });\n  }\n\n  ;\n\n  function resetPassword() {\n    ProfileAPI.passwordReset().then(res => {\n      setPassSuccess(true);\n      setErrors({});\n\n      if (emailSuccess) {\n        setEmailSuccess(false);\n      }\n    }).catch(error => {\n      setErrors(error);\n    });\n  }\n\n  function handleChange(e) {\n    setTempEmail(e.currentTarget.value);\n  }\n\n  function emailComponent() {\n    if (emailFlag) {\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, ResetErrors(resetErrors), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Email Address\")), /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: emailValue,\n        onChange: e => handleChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"mt-4\",\n        onClick: () => resetEmail(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mt-4 ml-2\",\n        variant: \"secondary\",\n        onClick: () => emailSwitch(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, \"Cancel\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, EmailSuccess(emailSuccess), PasswordSuccess(passwordSuccess), ResetErrors(resetErrors), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"border border-white rounded pl-3 pb-2 pt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"pl-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, emailValue), /*#__PURE__*/React.createElement(Button, {\n        className: \"ml-3\",\n        onClick: () => emailSwitch(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"Reset Email\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"border border-white rounded pl-3 pt-2 pb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"p-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"ml-3 mt-1\",\n        onClick: () => resetPassword(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, \"Reset Password\"))));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"About\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"My Account Settings\"))), emailComponent()));\n};\n\nconst MSTP = state => {\n  let auth = state.auth;\n  return {\n    currentUser: auth.currentUser,\n    isAuthed: auth.isAuthed\n  };\n};\n\nexport default connect(MSTP)(Profile);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/components/Account/Profile.js"],"names":["React","Container","Row","Col","Button","Form","ProfileAPI","useState","useEffect","firebase","connect","ResetErrors","EmailSuccess","PasswordSuccess","useHistory","ROUTES","Profile","currentUser","isAuthed","emailFlag","emailSwitch","emailValue","setEmail","email","tempEmail","setTempEmail","resetErrors","setErrors","emailSuccess","setEmailSuccess","passwordSuccess","setPassSuccess","history","push","LOGIN","auth","resetEmail","emailReset","then","res","catch","error","resetPassword","passwordReset","handleChange","e","currentTarget","value","emailComponent","MSTP","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as ProfileAPI from '../../util/profileAPI';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport ResetErrors from '../Errors/ResetErrors';\nimport EmailSuccess from '../Success/EmailSuccess';\nimport PasswordSuccess from '../Success/PasswordSuccess';\nimport { useHistory } from \"react-router-dom\";\nimport * as ROUTES from \"../../routes/routes\";\n\n\nconst Profile = ({ currentUser, isAuthed }) => {\n  const [emailFlag, emailSwitch] = useState(false);\n  const [emailValue, setEmail] = useState(currentUser.email);\n  const [tempEmail, setTempEmail] = useState();\n  const [resetErrors, setErrors] = useState({});\n  const [emailSuccess, setEmailSuccess] = useState(false);\n  const [passwordSuccess, setPassSuccess] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isAuthed) {\n      history.push(ROUTES.LOGIN)\n    } else {\n      setEmail(firebase.auth().currentUser.email);\n      setEmailSuccess(false);\n      setPassSuccess(false);\n    }\n  }, [isAuthed, history]);\n\n  function resetEmail() {\n    ProfileAPI.emailReset(tempEmail)\n    .then((res) => {\n      setEmail(tempEmail);\n      emailSwitch(false);\n      setEmailSuccess(true);\n      setErrors({});\n      if (passwordSuccess) {\n        setPassSuccess(false);\n      };\n    })\n    .catch(error => {\n        setErrors(error);\n      })\n  };\n\n  function resetPassword() {\n    ProfileAPI.passwordReset()\n      .then((res) => {\n        setPassSuccess(true);\n        setErrors({});\n        if (emailSuccess) {\n          setEmailSuccess(false);\n        }\n      })\n      .catch((error) => {\n        setErrors(error);\n      })\n  }\n\n  function handleChange(e) {\n    setTempEmail(e.currentTarget.value)\n  }\n\n  function emailComponent() {\n    if (emailFlag) {\n      return (\n          <Form>\n            {ResetErrors(resetErrors)}\n            <Form.Group>\n              <Form.Label>\n                <h2>\n                  Email Address\n                </h2>\n              </Form.Label>\n              <Form.Control\n                placeholder={emailValue}\n                onChange={(e) => handleChange(e)}\n              >\n              </Form.Control>\n            </Form.Group>\n            <Button className=\"mt-4\" onClick={() => resetEmail()}>\n              Save\n            </Button>\n            <Button className=\"mt-4 ml-2\" variant=\"secondary\" onClick={() => emailSwitch(false)}>\n              Cancel\n            </Button>\n          </Form>\n      )\n    } else {\n      return (\n        <Container>\n          {EmailSuccess(emailSuccess)}\n          {PasswordSuccess(passwordSuccess)}\n          {ResetErrors(resetErrors)}\n          <Row >\n            <Col >\n              <h2 className=\"border border-white rounded pl-3 pb-2 pt-2\" >\n                Email\n              </h2> \n              <h6 className=\"pl-3\">\n                {emailValue}  \n              </h6>\n              <Button className=\"ml-3\" onClick={() => emailSwitch(true)}>\n                Reset Email\n              </Button>\n            </Col>\n            <Col >\n              <h2 className=\"border border-white rounded pl-3 pt-2 pb-2\" >\n                Password\n              </h2>\n              <h6 className=\"p-2\">\n              </h6>\n              <Button className=\"ml-3 mt-1\" onClick={() => resetPassword()}>\n                Reset Password\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n\n  }\n\n  return (\n    <div className=\"About\">\n      <Container fluid>\n        <Row>\n          <Col align=\"center\">\n            <h1>My Account Settings</h1>\n          </Col>\n        </Row>\n\n        {emailComponent()}\n        \n      </Container>\n    </div>\n  )\n};\n\nconst MSTP = (state) => {\n  let auth = state.auth;\n\n  return {\n    currentUser: auth.currentUser,\n    isAuthed:  auth.isAuthed\n  };\n}\n\nexport default connect(MSTP)(Profile);\n\n\n"]},"metadata":{},"sourceType":"module"}