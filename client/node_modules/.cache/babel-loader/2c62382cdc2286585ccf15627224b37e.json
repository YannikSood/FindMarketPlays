{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers'; // import logger from 'redux-logger';\n\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\"auth\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  }) // .concat(logger)\n\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/store.js"],"names":["configureStore","getDefaultMiddleware","rootReducer","persistReducer","persistStore","storage","persistConfig","key","whitelist","persistedReducer","store","reducer","middleware","serializableCheck","immutableCheck","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGN,cAAc,CAACG,aAAD,EAAgBJ,WAAhB,CAAvC;AAEA,OAAO,MAAMQ,KAAK,GAAGV,cAAc,CAAC;AAClCW,EAAAA,OAAO,EAAEF,gBADyB;AAElCG,EAAAA,UAAU,EAAEX,oBAAoB,CAAC;AAAEY,IAAAA,iBAAiB,EAAE,KAArB;AAA4BC,IAAAA,cAAc,EAAE;AAA5C,GAAD,CAFE,CAGhC;;AAHgC,CAAD,CAA5B;AAMP,OAAO,MAAMC,SAAS,GAAGX,YAAY,CAACM,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n// import logger from 'redux-logger';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\"auth\"]\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({ serializableCheck: false, immutableCheck: false })\n    // .concat(logger)\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}