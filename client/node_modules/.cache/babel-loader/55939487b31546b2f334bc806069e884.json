{"ast":null,"code":"import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import rootReducer from'./reducers';// import logger from 'redux-logger';\nimport{persistReducer,persistStore}from'redux-persist';import storage from'redux-persist/lib/storage';var persistConfig={key:'root',storage:storage,whitelist:[\"auth\"]};var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware({serializableCheck:false,immutableCheck:false})// .concat(logger)\n});export var persistor=persistStore(store);","map":{"version":3,"sources":["/Users/yanniksood/Desktop/FindMarketPlays.com/FindMarketPlays/client/src/store.js"],"names":["configureStore","getDefaultMiddleware","rootReducer","persistReducer","persistStore","storage","persistConfig","key","whitelist","persistedReducer","store","reducer","middleware","serializableCheck","immutableCheck","persistor"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,YAAxB,CACA;AACA,OAASC,cAAT,CAAyBC,YAAzB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBF,OAAO,CAAPA,OAFoB,CAGpBG,SAAS,CAAE,CAAC,MAAD,CAHS,CAAtB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGN,cAAc,CAACG,aAAD,CAAgBJ,WAAhB,CAAvC,CAEA,MAAO,IAAMQ,CAAAA,KAAK,CAAGV,cAAc,CAAC,CAClCW,OAAO,CAAEF,gBADyB,CAElCG,UAAU,CAAEX,oBAAoB,CAAC,CAAEY,iBAAiB,CAAE,KAArB,CAA4BC,cAAc,CAAE,KAA5C,CAAD,CAC9B;AAHgC,CAAD,CAA5B,CAMP,MAAO,IAAMC,CAAAA,SAAS,CAAGX,YAAY,CAACM,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n// import logger from 'redux-logger';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\"auth\"]\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({ serializableCheck: false, immutableCheck: false })\n    // .concat(logger)\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}